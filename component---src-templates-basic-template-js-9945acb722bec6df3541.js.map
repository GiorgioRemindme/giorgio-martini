{"version":3,"file":"component---src-templates-basic-template-js-9945acb722bec6df3541.js","mappings":"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","sources":["webpack://giorgio-martini-website/./node_modules/randomcolor/randomColor.js","webpack://giorgio-martini-website/./node_modules/core-js/internals/array-species-constructor.js","webpack://giorgio-martini-website/./node_modules/core-js/internals/array-species-create.js","webpack://giorgio-martini-website/./node_modules/core-js/internals/flatten-into-array.js","webpack://giorgio-martini-website/./node_modules/core-js/internals/function-bind-context.js","webpack://giorgio-martini-website/./node_modules/core-js/internals/is-array.js","webpack://giorgio-martini-website/./node_modules/core-js/modules/es.array.flat.js","webpack://giorgio-martini-website/./src/helpers.js","webpack://giorgio-martini-website/./src/sketches/DancingLines.js","webpack://giorgio-martini-website/./src/sketches/ProbableFuture.js","webpack://giorgio-martini-website/./src/sketches/Fragment.js","webpack://giorgio-martini-website/./src/sketches/mosaic.js","webpack://giorgio-martini-website/./src/sketches/protocol.js","webpack://giorgio-martini-website/./src/sketches/poster.js","webpack://giorgio-martini-website/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://giorgio-martini-website/./node_modules/robust-predicates/esm/util.js","webpack://giorgio-martini-website/./node_modules/robust-predicates/esm/orient2d.js","webpack://giorgio-martini-website/./node_modules/robust-predicates/esm/orient3d.js","webpack://giorgio-martini-website/./node_modules/robust-predicates/esm/incircle.js","webpack://giorgio-martini-website/./node_modules/robust-predicates/esm/insphere.js","webpack://giorgio-martini-website/./node_modules/delaunator/index.js","webpack://giorgio-martini-website/./src/sketches/tris.js","webpack://giorgio-martini-website/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://giorgio-martini-website/./src/templates/basicTemplate.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n;\n\n(function (root, factory) {\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory(); // Support NodeJS & Component, which allow module.exports to be a function\n\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    } // Support CommonJS 1.1.1 spec\n\n\n    exports.randomColor = randomColor; // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory); // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n})(this, function () {\n  // Seed to get repeatable colors\n  var seed = null; // Shared color dictionary\n\n  var colorDictionary = {}; // Populate the color dictionary\n\n  loadColorBounds(); // check if a range is taken\n\n  var colorRanges = [];\n\n  var randomColor = function randomColor(options) {\n    options = options || {}; // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed; // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed); // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string'); // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H, S, B; // Check if we need to generate multiple colors\n\n    if (options.count !== null && options.count !== undefined) {\n      var totalColors = options.count,\n          colors = []; // Value false at index i means the range i is not taken yet.\n\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false);\n      }\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n      return colors;\n    } // First we pick a hue (H)\n\n\n    H = pickHue(options); // Then use H to determine saturation (S)\n\n    S = pickSaturation(H, options); // Then use S and H to determine brightness (B).\n\n    B = pickBrightness(H, S, options); // Then we return the HSB color in the desired format\n\n    return setFormat([H, S, B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue);\n      var hue = randomWithin(hueRange); //Each of colorRanges.length ranges has a length equal approximatelly one step\n\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length;\n      var j = parseInt((hue - hueRange[0]) / step); //Check if the range j is taken\n\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length;\n      } else {\n        colorRanges[j] = true;\n      }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n      hueRange = [min, max];\n      hue = randomWithin(hueRange);\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    } else {\n      var hueRange = getHueRange(options.hue);\n      hue = randomWithin(hueRange); // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0, 100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n    }\n\n    return randomWithin([sMin, sMax]);\n  }\n\n  function pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin) / 2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat(hsv, options) {\n    switch (options.format) {\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n  }\n\n  function getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n      var s2 = lowerBounds[i + 1][0],\n          v2 = lowerBounds[i + 1][1];\n\n      if (S >= s1 && S <= s2) {\n        var m = (v2 - v1) / (s2 - s1),\n            b = v1 - m * s1;\n        return m * S + b;\n      }\n    }\n\n    return 0;\n  }\n\n  function getHueRange(colorInput) {\n    if (typeof parseInt(colorInput) === 'number') {\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n    }\n\n    if (typeof colorInput === 'string') {\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [hue, hue];\n      }\n    }\n\n    return [0, 360];\n  }\n\n  function getSaturationRange(hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue -= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n      var color = colorDictionary[colorName];\n\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n        return colorDictionary[colorName];\n      }\n    }\n\n    return 'Color not found';\n  }\n\n  function randomWithin(range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895;\n      var r = Math.random();\n      r += golden_ratio;\n      r %= 1;\n      return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex(hsv) {\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n\n  function defineColor(name, hueRange, lowerBounds) {\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n  }\n\n  function loadColorBounds() {\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n    defineColor('orange', [18, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n    defineColor('yellow', [46, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n    defineColor('green', [62, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n    defineColor('blue', [178, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n    defineColor('purple', [257, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n    defineColor('pink', [282, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n  }\n\n  function HSVtoRGB(hsv) {\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n\n    if (h === 0) {\n      h = 1;\n    }\n\n    if (h === 360) {\n      h = 359;\n    } // Rebase the h,s,v values\n\n\n    h = h / 360;\n    var s = hsv[1] / 100,\n        v = hsv[2] / 100;\n    var h_i = Math.floor(h * 6),\n        f = h * 6 - h_i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        r = 256,\n        g = 256,\n        b = 256;\n\n    switch (h_i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    return result;\n  }\n\n  function HexToHSB(hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n        green = parseInt(hex.substr(2, 2), 16) / 255,\n        blue = parseInt(hex.substr(4, 2), 16) / 255;\n    var cMax = Math.max(red, green, blue),\n        delta = cMax - Math.min(red, green, blue),\n        saturation = cMax ? delta / cMax : 0;\n\n    switch (cMax) {\n      case red:\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\n\n      case green:\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\n\n      case blue:\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\n    }\n  }\n\n  function HSVtoHSL(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        k = (2 - s) * v;\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n  }\n\n  function stringToInteger(string) {\n    var total = 0;\n\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i);\n    }\n\n    return total;\n  } // get The range of given hue when options.count!=0\n\n\n  function getRealHueRange(colorHue) {\n    if (!isNaN(colorHue)) {\n      var number = parseInt(colorHue);\n\n      if (number < 360 && number > 0) {\n        return getColorInfo(colorHue).hueRange;\n      }\n    } else if (typeof colorHue === 'string') {\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0];\n        return getColorInfo(hue).hueRange;\n      }\n    }\n\n    return [0, 360];\n  }\n\n  return randomColor;\n});","var isObject = require('../internals/is-object');\nvar isArray = require('../internals/is-array');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","var arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","var aFunction = require('../internals/a-function');\n\n// optional / simple context binding\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 0: return function () {\n      return fn.call(that);\n    };\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(arg) {\n  return classof(arg) == 'Array';\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flat` method\n// https://tc39.es/ecma262/#sec-array.prototype.flat\n$({ target: 'Array', proto: true }, {\n  flat: function flat(/* depthArg = 1 */) {\n    var depthArg = arguments.length ? arguments[0] : undefined;\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));\n    return A;\n  }\n});\n","export const getRandomArbitrary = (min, max) => {\n  return Math.random() * (max - min) + min;\n}\n\n\nexport const getRandomFromArray = (items) => {\n  let result = items[Math.floor(Math.random() * items.length)]\n  return result\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet dancingLine1\nlet dancingLine2\n\nfunction isOdd(num) { // TODO move to utils\n  return num % 2;\n}\n\nfunction Sketch(p5) {\n  \n  p5.setup = () => {\n    p5.createCanvas(800,500)\n    p5.background(\"#18020C\")\n    dancingLine1 = dancingLine(false, p5)\n    dancingLine2 = dancingLine(true, p5)\n  }\n\n  p5.draw = () => {\n    p5.background(\"#18020C\")\n    p5.translate(p5.width/2, p5.height/2)\n    dancingLine1.display()\n    dancingLine2.display()\n  }\n}\n\nfunction dancingLine(flip = false, p5) {\n  let history = []\n  let linesAmt =60\n  let col = 255\n  let v1 = p5.createVector(0,0)\n  let v2 = p5.createVector(0,0)\n  \n  let x1Angle = flip ? 90 : 0\n  let y1Angle = flip ? 90 : 0\n  let x2Angle = flip ? 90 : 0\n  let y2Angle = flip ? 90 : 0\n\n  let x1AngleOff = 0.03\n  let y1AngleOff = 0.002\n  let x2AngleOff = 0.015\n  let y2AngleOff = 0.02  \n  \n  let r1 = flip ? 250 : 300 \n  let r2 = flip ? 250 : 300 \n\n  function display() {\n    v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n    v2.set(r2 * p5.sin(x2Angle), r2 * p5.sin(y2Angle))\n\n    history.push([v1.x, v1.y, v2.x, v2.y]) \n    \n    if (history.length > linesAmt) history.splice(0,1)\n    \n    col = flip\n      ? \"#E5FFDE\"\n      : \"#634B66\"\n\n    history.forEach((linea, i) => {\n      p5.stroke(col) \n      p5.strokeWeight(2)\n      p5.line(linea[0],linea[1],linea[2],linea[3])\n    })\n\n    x1Angle += flip ? x1AngleOff : x1AngleOff + 0.01\n    y1Angle += flip ? y1AngleOff : y1AngleOff + 0.01\n    x2Angle += flip ? x2AngleOff : x2AngleOff + 0.01\n    y2Angle += flip ? y2AngleOff : y2AngleOff + 0.01\n  }\n\n  return {\n    display,\n  }\n}\n\nexport default class DancingLines extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport { loadableP5 as P5Wrapper } from '../components/loadable';\nimport { randomFromRange } from '../utils'\n\nlet canvasWidth = 400\nlet canvasHeight = canvasWidth * 1.5\nlet grid\nlet amtOfHorizontalCircles = 40\nlet minCircleSize = 5\nconst maxCircleSize = 10\nlet rotation = 7\nlet _background = `hsl(200,52%,10%)`\nlet cols = 30\nlet rows = 30\n\nfunction Sketch(p5) {\n  let background = p5.color(_background)\n\n  p5.setup = () => {\n    p5.createCanvas(canvasWidth, canvasHeight, p5.WEBGL)\n    p5.smooth()\n    p5.background(background)\n    grid = _grid(cols, rows)\n  }\n\n  p5.draw = () => {\n    p5.rotateX(rotation)\n    p5.frameRate(20)\n    p5.translate(0, -90, p5.height / 3.5) // fix magic number\n    p5.background(background)\n    grid.forEach(x => x.display())\n    slideRow(grid)\n  }\n\n  const circle = (fillColor, x, y, size) => {\n    let xpos = x\n    let ypos = y\n    return {\n      xpos,\n      ypos,\n      display() {\n        p5.noStroke()\n        p5.fill(fillColor)\n        p5.ellipse(xpos - p5.width / 2, ypos - p5.height / 2.5, size, size)\n      },\n      slide(amt) {\n        if (ypos > p5.height) {\n          size = randomFromRange(minCircleSize, maxCircleSize)\n          ypos = p5.height / rows - p5.height / rows\n        }\n        ypos += amt\n      },\n    }\n  }\n\n  function randomLevelFromHsl(h, s, min, max) {\n    let mult = Math.random() > 0.7 ? 1 : 0.5\n    return `hsl(${h}, ${s}%, ${p5.random(min * mult, max * mult).toFixed()}%)`\n  }\n\n  function _grid(cols, rows) {\n    let grid = []\n    for (let x = 0; x < cols + 1; x++) {\n      for (let y = 0; y < rows + 1; y++) {\n        let color = randomLevelFromHsl(220, 100, 50, 50)\n        let size = randomFromRange(minCircleSize, maxCircleSize)\n        grid.push(circle(color, x * p5.width / cols, y * p5.height / rows, size))\n      }\n    }\n    return grid\n  }\n\n  function slideRow() {\n    grid.forEach(circle => {\n      circle.slide(p5.height / rows)\n    })\n  }\n}\n\nexport default class ProbableFuture extends Component {\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport { loadableP5 as P5Wrapper } from '../components/loadable';\n\nlet img\nlet uploadImg\nconst cols = 35\nconst rows = 35\nlet matrix = []\nlet w\nlet h\nlet input;\n\nfunction Sketch(p5) {\n  function saveColors(matrix) {\n    matrix.forEach((cell, i) => {\n      matrix[i].push(p5.get(cell[0], cell[1]))\n    })\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function buildNewMatrix(rows, cols, xS, yS) {\n    let m = []\n    for (let i = 0; i < rows + 1; i++) {\n      for (let j = 0; j < cols + 1; j++) {\n        m.push([i * xS, j * yS])\n      }\n    }\n    return m\n  }\n\n  p5.preload = () => {\n    img = p5.loadImage('https://i.imgur.com/6B788ty.jpg')\n  }\n\n  p5.setup = () => {\n    var myCanvas = p5.createCanvas(img.width, img.height)\n    w = p5.width / cols\n    h = p5.height / rows\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        matrix.push([i * w, j * h])\n      }\n    }\n  }\n\n  p5.draw = () => {\n    p5.frameRate(5)\n    let _newCols = p5.map(p5.mouseX, 0, p5.width, 0, 40)\n    let newCols = Math.ceil(_newCols)\n    let _newRows = p5.map(p5.mouseY, 0, p5.height, 0, 40)\n    let newRows = Math.ceil(_newRows)\n\n    if (p5.mouseX > 1 && p5.mouseX < p5.width && p5.mouseY > 1 && p5.mouseY < p5.height) {\n      w = p5.width / newCols\n      h = p5.height / newRows\n      matrix = buildNewMatrix(newCols, newRows, p5.width / newCols, p5.height / newRows)\n      p5.frameRate(40)\n    } else {\n      w = p5.width / cols\n      h = p5.height / rows\n      matrix = buildNewMatrix(cols, rows, p5.width / cols, p5.height / rows)\n      p5.frameRate(5)\n    }\n\n    p5.image(img, 0, 0)\n    saveColors(matrix)\n    p5.background(0)\n    shuffleArray(matrix)\n\n    matrix.forEach((cell, i) => {\n      p5.fill(cell[2])\n      p5.noStroke()\n      p5.ellipseMode(p5.CORNER)\n      p5.ellipse(cell[0], cell[1], w, h)\n    })\n  }\n}\n\nexport default class Fragment extends Component {\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet frame\nlet canvas \nlet img\nlet uploadImg\nlet gridAmount = 10\nlet matrix = []\nlet xSpacing\nlet ySpacing\nlet w\nlet h\nlet input\nlet colors\nlet dotsSize\nlet palette = [\n  '#42CAFD',\n  '#66B3BA',\n  '#8EB19D',\n  '#F6EFA6',\n  '#F0D2D1'\n]\n\nfunction Sketch(p5) {\n\n  function getColors(items) {\n    let _items = [...items]\n    let randomColId = Math.floor(Math.random() * _items.length)\n    _items.splice(randomColId, 1)\n  \n    return {\n      bg: items[randomColId],\n      colors: _items\n    }\n  }\n  \n  function getRandomFromArray(items) {\n    let result = items[Math.floor(Math.random() * items.length)]\n    return result\n  }\n  \n  \n  function randomDeg(_x, _y, w, h) {\n    let randomNumber = (Math.random() * 10).toFixed(1) // make util \n    if (randomNumber >= 0 && randomNumber < 2.5) {\n      return 0\n    } else if (randomNumber >= 2.5 && randomNumber < 5) {\n      return p5.HALF_PI\n    } else if (randomNumber >= 5 && randomNumber < 7.5) {\n      return p5.PI\n    } else {\n      return p5.TWO_PI\n    }\n  }\n  \n  function randomSign(w,h) {\n    let randomNumber = (Math.random() * 10).toFixed(1)\n  \n    if (randomNumber >= 0 && randomNumber < 3.3) {\n      let col1 = getRandomFromArray(colors.colors)\n      p5.fill(col1)\n      p5.arc(0, 0, w, h, 0, p5.HALF_PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } else if (randomNumber >= 3.3 && randomNumber < 6.6) {\n      let col2 = getRandomFromArray(colors.colors)\n      p5.fill(col2)\n      p5.arc(0, 0, w, h, 0, p5.PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } else if (randomNumber >= 6.6 && randomNumber <= 10) {\n      let col3 = getRandomFromArray(colors.colors)\n      p5.fill(col3)\n      p5.arc(0, 0, w, h, 0, p5.PI)\n      let col4 = getRandomFromArray(colors.colors)\n      p5.fill(col4)\n      p5.arc(0, 0, w, h, p5.PI, p5.PI + p5.HALF_PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } \n  }\n  \n  function Spot(x, y, w, h) {\n    let _x = x\n    let _y = y\n  \n    function display(xoff, yoff) {\n      p5.noStroke()\n      p5.push()\n        p5.translate(_x+xoff/2,_y+yoff/2)\n        let r = randomDeg()\n        p5.rotate(r)\n        randomSign(w,h)\n        p5.translate(0,0)\n      p5.pop()\n    }\n  \n    return {\n      display,\n    }\n  }\n\n  p5.setup = () => {\n    canvas = p5.createCanvas(600,600)\n  }\n\n  p5.draw = () => {\n    p5.frameCount > 0\n    ? p5.frameRate(1)\n    : p5.frameRate(1)\n\n    canvas.mouseOver(() => p5.frameRate(0))\n    canvas.mouseOut(() => p5.frameRate(10))\n\n  gridAmount = Math.ceil(p5.random(1,15))\n  w = p5.width/gridAmount\n  h = p5.height/gridAmount\n  xSpacing = p5.width/gridAmount\n  ySpacing = p5.height/gridAmount\n  colors = getColors(palette)\n  dotsSize = p5.random(p5.width/80, p5.width/18)\n\n  for (let i = 0; i < gridAmount; i++) {\n    for (let j = 0; j < gridAmount; j++) {\n      matrix.push([\n        Spot(i*xSpacing,j*ySpacing, xSpacing, ySpacing)\n      ])\n    }\n  }\n\n  p5.background(colors.bg)\n  matrix.forEach((cell, i) => {\n    p5.noStroke()\n    cell[0].display(xSpacing, ySpacing)\n  })  \n  matrix = []\n  }\n}\n\n\nexport default class Mosaic extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable'\nimport { getRandomArbitrary } from \"../helpers\"\n\nlet img\nlet circle1 \nlet circle2 \nlet squares \nlet cropElement\nlet c1Opts\nlet c2Opts\nlet squaresOpts\nlet color = '#fff'\n\nfunction evenRandomNumber(amt) { // add to utils\n  return Math.ceil( Math.random() * amt / 2 ) * 2\n}\n\nfunction Sketch(p5) {\n  function cropElement(opts) {\n    let r \n    let angle\n    let introAngle\n    let outroAngle\n    let amt\n    let posArray = []\n    let introPosArray = []\n    let outroPosArray = []\n    let animation = 0\n    let initialAnimation = animation\n    let maxAnimation = 150\n    let resting = 0\n    let initialResting = 40\n    let fade = 80\n    let isFill = true\n    let strokeWeight = []\n\n    function drawingSettings(isFill, strokeWeight) {\n      if (isFill) {\n        p5.fill(color)\n        p5.noStroke()        \n      } else {\n        p5.noFill() \n        p5.strokeWeight(strokeWeight) \n        p5.stroke(color)  \n      }\n    }\n\n    function generatePositions() {\n      p5.angleMode(p5.DEGREES)\n      r = getRandomArbitrary(opts.minSize, opts.maxSize) // use native\n      amt = evenRandomNumber(opts.amt)\n      angle = 360 / amt\n      // these are some ugly magic numbers... try to fix the jumping between intro and outro other way...\n      introAngle = 362.5 / amt\n      outroAngle = 364.5 / amt\n      let cropRadius = getRandomArbitrary(opts.cropRadius[0], opts.cropRadius[1])\n\n      if(opts.strokeWeight === undefined || opts.strokeWeight.length === 0) {\n        isFill = true\n      } else {\n        const [strokeMin, strokeMax] = opts.strokeWeight\n        isFill = false\n        strokeWeight = getRandomArbitrary(strokeMin, strokeMax)\n      } \n\n      // we should just use one posArray, but we are doing a hack\n      // of scaling the rotation so there is no jumping between intro and outro\n      posArray = [] // reseting array b4 filling it again...\n      for (let i = 0; i < amt; i++) {\n        posArray.push([angle * i, cropRadius])\n      }    \n      introPosArray = []\n      for (let i = 0; i < amt; i++) {\n        introPosArray.push([introAngle * i, cropRadius])\n      }    \n      outroPosArray = []\n      for (let i = 0; i < amt; i++) {\n        outroPosArray.push([outroAngle * i, cropRadius])\n      }    \n    }\n\n    function display() {\n      // Intro...\n      if (animation < maxAnimation) {\n        drawingSettings(isFill, strokeWeight)\n        animation++\n        introPosArray.forEach((pos, i) => {\n          let subtractor = pos[0] / animation\n          let rotation = pos[0] - subtractor\n          \n          p5.push() // make this whole part into a function and repeat below...\n            p5.rotate(rotation)\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n                p5.push()\n                  p5.rotate(45)\n                  p5.rect(0, 0, r, r)\n                p5.pop()\n            }\n          p5.pop()\n        })\n      } else if (animation === maxAnimation && resting <= initialResting ) {\n        // Resting\n        drawingSettings(isFill, strokeWeight)\n        resting ++\n        posArray.forEach((pos, i) => {\n          p5.push()\n            p5.rotate(pos[0])\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n              p5.push()\n                p5.rotate(45)\n                p5.rect(0, 0, r, r)\n              p5.pop()\n            }\n          p5.pop()\n        })   \n      } else if (resting >= initialResting && fade > 1 ) {\n      // Outro\n      drawingSettings(isFill, strokeWeight)\n        fade--\n        outroPosArray.forEach((pos, i) => {\n          let outroRotation = pos[0] - (pos[0] / fade)\n          p5.push()\n            p5.rotate(-outroRotation)\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n              p5.push()\n                p5.rotate(45)\n                p5.rect(0, 0, r, r)\n              p5.pop()\n            }\n          p5.pop()\n        })        \n      } else if (fade === 1) {\n        // Reset values to start again...\n        generatePositions()\n        fade = 80\n        animation = 0\n        resting = 0        \n      }\n    }    \n    return {\n      generatePositions,\n      display\n    }\n  }\n\n  p5.setup = () => {\n    p5.createCanvas(600, 600)\n    p5.translate(p5.width / 2, p5.height / 2) \n\n    c1Opts = {\n      amt: 8,\n      maxSize: p5.width/2,\n      minSize: p5.width/8,\n      cropRadius: [p5.width/8, p5.width/4],\n      ellipse: true,\n    }\n    \n    c2Opts = {\n      amt: 8,\n      maxSize: p5.width/4,\n      minSize: p5.width/8,\n      cropRadius: [p5.width/8, p5.width/3],\n      strokeWeight: [10, 15],\n      ellipse: true,\n    }\n\n    squaresOpts = {\n      amt: 4,\n      maxSize: p5.width/6,\n      minSize: p5.width/8,\n      strokeWeight: [15, 35],\n      cropRadius: [p5.width/6, p5.width/4],\n    }\n    \n    circle1 = cropElement(c1Opts)\n    circle2 = cropElement(c2Opts)\n    squares = cropElement(squaresOpts)\n    p5.translate(-p5.width / 2, -p5.height / 2) \n    circle1.generatePositions()\n    circle2.generatePositions()\n    squares.generatePositions()\n  }\n\n  p5.draw = () => {\n    p5.translate(p5.width / 2, p5.height / 2) \n    // reset to black\n    p5.blendMode(p5.REPLACE) \n    p5.background(0)\n    // set to difference to make the ngative space stuff\n    p5.blendMode(p5.DIFFERENCE) \n    circle1.display()\n    circle2.display()\n    squares.display()\n    p5.filter(p5.INVERT)\n  }\n}\n\nexport default class Protocol extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport { loadableP5 as P5Wrapper } from '../components/loadable'\nimport randomColor from 'randomcolor'\nimport {Vector} from \"p5\"\nimport '@fontsource/passion-one'\nimport { randomFromRange } from '../utils'\n\n// Find out if we need p5, or if P5Wrapper includes p5... then remove p5 and import vector from P5Wrapper.\nlet textArray = [\"AMAZING\", \"SHORTY\", \"HEYA!\", \"YUP\", \"BOOM\", \"FANTASTIC\", \"BALLIN'\", \"FAKE\", \"NICE\", \"GREAT\", \"FABULOUS\", \"FAB\", \"BEAST\", \"UNREAL\", \"MARVEL\", \"WOW\", \"ZOO\", \"CRAZY\", \"FUN\", \"RAD\", \"GOOD\", \"GORGEOUS\", \"REALLY\", \"YEAH\", \"LOVELY\", \"SCARY\", \"BAM!\", \"HOT\", \"SWEET\", \"NEAT\", \"SPACE\", \"COOL\", \"PURO\", \"SUPERB\", \"HURRA\", \"ALRIGHT\", \"INSANE\", \"MAMA\", \"PERFECT\", \"BREATH\", \"GRIND\", \"RAW\", \"WHAT\", \"OKAY\", \"BOSSY\", \"CHECK\", \"DAMN\", \"STONED\", \"DADA\", \"CUTE\", \"MK3\", \"AKA\", \"GROOVY\", \"DONE\", \"WICKED\", \"HYFR\", \"GLORY\", \"YUMMY\", \"BIG\", \"EPIC\", \"EXTRA\", \"DROP\", \"HUGE\", \"STUNNED\", \"HOAX\", \"INK\", \"FIRE\", \"HELLA\", \"LOOP\", \"YO\", \"EASY\", \"GEIL\", \"BIG\", \"SWEET\", \"KING\", \"OUTTA\", \"DANDY\", \"YIPPEE\", \"PIMPIN'\", \"YAY\", \"DUH\", \"FEAR\", \"STASH\", \"SURE\", \"PHAT\", \"GEEZ\", \"BAE\", \"BABE\", \"BABY\", \"PONG\", \"YASS\", \"NOISE\", \"HA!\", \"FUCK\", \"HOLLER\", \"RAVE\", \"CLASSIC\", \"GENIUS\", \"DOOMED\", \"BLUNT\", \"HELLO\", \"BANG\", \"LOOSE\", \"HOLLY\", \"MASSIVE\", \"FRESH\", \"SHINY\", \"PEACHY\", \"A-HA\", \"HELP!\", \"BOOZE\", \"BOYZ\", \"GIRLZ\", \"TAMALE\", \"HEROIN\", \"SAVAGE\", \"VIBE\", \"MUTTER\", \"GO\", \"BUDHA\", \"FATHER\", \"DANDY\", \"HEY\", \"0.0009\", \"MARY\", \"GANG\", \"FYI\", \"RALLY\", \"FRENZY\"]\nlet textShadow\nlet randomXposForBubbles\nlet randomYposForBubbles\nlet indexOfArrayOfRandomXposForBubbles\nlet indexOfArrayOfRandomYposForBubbles\nlet randomXposForRects\nlet randomYposForRects\nlet randomXposForLines\nlet randomYposForLines\nlet colsArray\nlet randomSizesForBubbles\nlet randomSizesForRects\nlet colorTonesForBubbles\nlet colorTonesForRect\nlet collectionOfRotations\nlet arrayOfRandomPosForLines\nlet linesAngle\nlet collectionOfLengths\nlet collectionOfRotsForBeziers\nlet pointsForBezier\nlet someWord\nlet bubblesArr = []\nlet linesArr = []\nlet initialBubblesXPos\nlet initialBubblesYPos\nlet canvasX = 300\nlet canvasY = 500\nlet degreeProbs = [45, 135]\n// Amount of elements\nlet amountOfBubbles = 40\nlet amountOfRects = 30\nlet amountOfLines = 25\nlet amountOfBeziers = 4\nlet maxBubblesXpos = 0.5 * canvasX\nlet maxBubblesYpos = 0.6 * canvasY\nlet maxRectsXpos = 0.8 * canvasX\nlet maxRectsYpos = 0.8 * canvasY\n\nfunction Sketch(p5) {\n  p5.setup = () => {\n    p5.colorMode(p5.HSB, 360)\n    p5.createCanvas(canvasX, canvasY)\n    // Initialize values for first run\n    randomXposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesXpos)\n    randomYposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesYpos)\n    initialBubblesXPos = randomXposForBubbles.map(x => x + p5.random(-canvasX / 2, canvasX / 2))\n    initialBubblesYPos = randomYposForBubbles.map(x => x + p5.random(-canvasY / 2, canvasY / 2))\n    randomXposForRects = evenRandomNums(amountOfRects, 0, maxRectsXpos)\n    randomYposForRects = evenRandomNums(amountOfRects, 0, maxRectsYpos)\n    randomXposForLines = evenRandomNums(amountOfLines, 0, canvasX / 2)\n    randomYposForLines = evenRandomNums(amountOfLines, 0, canvasY / 2)\n    colsArray = randomColor({ luminosity: 'light', format: 'hsl', count: 5 })\n    randomSizesForBubbles = returnArrOfRandomSizes(amountOfBubbles, 10, 80)\n    randomSizesForRects = returnArrOfRandomSizes(amountOfRects, 5, 30)\n    colorTonesForBubbles = returnCollectionOfColorTones(colsArray[1], amountOfBubbles)\n    colorTonesForRect = returnCollectionOfColorTones(colsArray[2], amountOfRects)\n    collectionOfRotations = returnCollectionOfRotations(amountOfRects)\n    linesAngle = returnlinesAngle()\n    collectionOfLengths = returnCollectionOfLengths(amountOfLines, 100)\n    someWord = returnRandomFromArray(textArray)\n    // pointsForBezier = returnCollectionOfPointsForBezier(amountOfBeziers)\n    // collectionOfRotsForBeziers = returnCollectionOfRotations(amountOfBeziers)\n\n    for (let i = 0; i < amountOfBubbles; i++) {\n      bubblesArr.push(new Bubble(initialBubblesXPos[i], initialBubblesYPos[i], randomXposForBubbles[i], randomYposForBubbles[i], randomSizesForBubbles[i], colorTonesForBubbles[i]))\n    }\n\n    for (let i = 0; i < amountOfLines; i++) {\n      linesArr.push(new linea(colsArray[2], linesAngle, collectionOfLengths[i], randomXposForLines[i], randomYposForLines[i]))\n    }\n  }\n\n  p5.draw = () => {\n\n    p5.translate(p5.width / 2, p5.height / 2)\n    p5.background(colsArray[0])\n\n    for (let i = 0; i < bubblesArr.length; i++) {\n      bubblesArr[i].wobble();\n    }\n\n    for (let i = 0; i < linesArr.length; i++) {\n      linesArr[i].slideIn();\n    }\n\n    addText(colsArray, someWord)\n    drawRects(randomXposForRects, randomYposForRects, randomSizesForRects, collectionOfRotations, colorTonesForRect)\n  }\n\n  p5.mouseClicked = () => {\n    // Positions\n    someWord = returnRandomFromArray(textArray)\n    randomXposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesXpos)\n    randomYposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesYpos)\n    randomXposForRects = evenRandomNums(amountOfRects, 0, maxRectsXpos)\n    randomYposForRects = evenRandomNums(amountOfRects, 0, maxRectsYpos)\n    randomXposForLines = evenRandomNums(amountOfLines, 0, canvasX / 2)\n    randomYposForLines = evenRandomNums(amountOfLines, 0, canvasY / 2)\n    initialBubblesXPos = randomXposForBubbles.map(x => x + p5.random(-canvasX / 2, canvasX / 2))\n    initialBubblesYPos = randomYposForBubbles.map(x => x + p5.random(-canvasY / 2, canvasY / 2))\n    // pointsForBezier = returnCollectionOfPointsForBezier(amountOfBeziers)\n    // Collections of colors, sizes etc..\n    colsArray = randomColor({ luminosity: 'light', format: 'hsl', count: 5 })\n    randomSizesForBubbles = returnArrOfRandomSizes(amountOfBubbles, 10, 80)\n    randomSizesForRects = returnArrOfRandomSizes(amountOfRects, 5, 30)\n    colorTonesForBubbles = returnCollectionOfColorTones(colsArray[1], amountOfBubbles)\n    colorTonesForRect = returnCollectionOfColorTones(colsArray[2], amountOfRects)\n    collectionOfRotations = returnCollectionOfRotations(amountOfRects)\n    linesAngle = returnlinesAngle()\n    collectionOfLengths = returnCollectionOfLengths(amountOfLines, 60)\n    // collectionOfRotsForBeziers = returnCollectionOfRotations(amountOfBeziers)\n    addText(colsArray, someWord)\n\n    bubblesArr = []\n    for (let i = 0; i < amountOfBubbles; i++) {\n      bubblesArr.push(new Bubble(initialBubblesXPos[i], initialBubblesYPos[i], randomXposForBubbles[i], randomYposForBubbles[i], randomSizesForBubbles[i], colorTonesForBubbles[i]))\n    }\n\n    linesArr = []\n    for (let i = 0; i < amountOfLines; i++) {\n      linesArr.push(new linea(colsArray[3], linesAngle, collectionOfLengths[i], randomXposForLines[i], randomYposForLines[i]))\n    }\n  }\n\n\n  function Bubble(initialXpos, initialYpos, indexOfArrayOfRandomXposForBubbles, indexOfArrayOfRandomYposForBubbles, randomSizesArr, colorTonesForBubbles) {\n    this.x = indexOfArrayOfRandomXposForBubbles\n    this.y = indexOfArrayOfRandomYposForBubbles\n    this.target = p5.createVector(0, 0)\n    this.initialXpos = initialXpos\n    this.initialYpos = initialYpos\n    this.pos = p5.createVector(this.initialXpos / 2, this.initialYpos / 2)\n    this.vel = p5.createVector(0, 0)\n    this.strength = 0.15 // 0.15\n    this.drag = 0.90 //  0.76\n    this.diameter = randomSizesArr\n    this.tone = colorTonesForBubbles\n\n    this.wobble = function () {\n      this.target.set(this.x / 2, this.y / 2)\n      this.force = Vector.sub(this.target, this.pos)\n      this.force = this.force.mult(this.strength)\n      this.vel = this.vel.mult(this.drag)\n      this.vel = this.vel.add(this.force);\n      this.pos = this.pos.add(this.vel);\n\n      p5.fill(this.tone)\n      p5.noStroke()\n      p5.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter)\n    }\n  }\n\n  function drawRects(randomXposForRects, randomYposForRects, randomSizesArr, rot, colorTonesForRect) {\n    randomXposForRects.forEach((o, i) => {\n      const x = o\n      const y = randomYposForRects[i]\n      const elementSize = randomSizesArr[i]\n      p5.noStroke()\n      p5.push()\n      p5.translate(x / 2, y / 2)\n      p5.rotate(rot[i])\n      p5.rectMode(p5.CENTER)\n      const c = p5.color('hsla(0, 0%, 0%, 0.05)')\n      p5.fill(c)\n      p5.rect(-4, -4, elementSize, elementSize)\n      p5.fill(colorTonesForRect[i])\n      p5.rect(0, 0, elementSize, elementSize)\n      p5.pop()\n    })\n  }\n\n  function returnlinesAngle() {\n    let angle = Math.random() < 0.5 ? 45 : 90\n    return angle\n  }\n\n  function returnCollectionOfLengths(amountOfLines, lengthMax) {\n    let lengthsArray = []\n    while (lengthsArray.length < amountOfLines) {\n      lengthsArray.push(p5.random(2, lengthMax))\n    }\n    return lengthsArray\n  }\n\n  function linea(colsArray, linesAngle, collectionOfLengthsElement, xPos, yPos) {\n    this.angle = Vector.fromAngle(linesAngle)\n    this.pos = p5.createVector(xPos, yPos)\n    this.vel = p5.createVector(this.angle.x, this.angle.y)\n    this.vel.mult(30)\n    this.acc = p5.createVector(this.angle.x / 3, this.angle.y / 3)\n    this.strokeWeight = Math.ceil(Math.random()*10)\n\n    this.slideIn = function () {\n      // Mirroring\n      if (this.pos.x > (canvasX / 2)) {\n        this.pos.x = -canvasX / 2\n      } else if (this.pos.x < -canvasX / 2) {\n        this.pos.x = canvasX / 2\n      }\n      if (this.pos.y > (canvasY / 2)) {\n        this.pos.y = -canvasY / 2\n      } else if (this.pos.y < -canvasY / 2) {\n        this.pos.y = canvasY / 2\n      }\n      // Stop if speed is 0\n      if (this.vel.x < 0.4 && this.vel.x > 0) {\n        this.acc.set(0, 0)\n        this.vel.set(0, 0)\n      }\n\n      this.vel.sub(this.acc)\n      this.pos.sub(this.vel)\n      p5.push()\n        p5.translate(this.pos.x, this.pos.y)\n        p5.push()\n          p5.rotate(linesAngle)\n          p5.translate(-collectionOfLengthsElement / 2, 0)\n          p5.stroke(colsArray)\n          p5.strokeCap(p5.SQUARE)\n          p5.strokeWeight(this.strokeWeight)\n          p5.line(0, 0, collectionOfLengthsElement, 0)\n        p5.pop()\n      p5.pop()\n    }\n  }\n\n  function addText(colsArray, someWord) {\n    p5.textSize(60)\n    p5.fill('hsl(160, 100%, 100%)')\n    p5.textAlign(p5.CENTER)\n    p5.rectMode(p5.CENTER)\n    p5.textFont('Passion One')\n    p5.strokeWeight(10)\n    p5.fill('hsla(160, 100%, 100%)')\n    p5.stroke(colsArray[3])\n    p5.text(someWord, 0, canvasY / 2.3, canvasX / 1.5, canvasY)\n  }\n\n\n  function returnCollectionOfPointsForBezier(amtOfBeziers) {\n    let arr = []\n    for (let i = 0; i < amtOfBeziers; i++) {\n      arr.push([])\n      // Here we get 2 random nums to use as the origin of the bezier\n      // and then we create the anchor points by adding or subtracting some random value from x or y... \n      const origin = evenRandomNums(2, 0, canvasX / 2),\n        x = Math.round(Math.random() < 0.5 ? origin[0] : origin[0] * -1),\n        y = Math.round(Math.random() < 0.5 ? origin[1] : origin[1] * -1),\n        // Fist point \n        anchorOneX = x + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        anchorOneY = y - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        controlOneX = x - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        controlOneY = y - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        // Second Point\n        anchorTwoX = x - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        anchorTwoY = y + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        controlTwoX = x + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\n        controlTwoY = y + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2))\n      arr[i].push(anchorOneX, anchorOneY, controlOneX, controlOneY, anchorTwoX, anchorTwoY, controlTwoX, controlTwoY)\n    }\n    return arr\n  }\n\n  function drawBeziers(bezierPointsArr, colsArray, rotationsArr) {\n    for (let i = 0; i < bezierPointsArr.length; i++) {\n      p5.strokeWeight(1)\n      p5.noFill()\n      // stroke( colsArray[4] )\n      let c = p5.color('hsla(0, 0%, 100%, 0.2)')\n      p5.stroke(c)\n      p5.push()\n      p5.rotate(rotationsArr[i])\n      // debugger ellipses to see where the points are\n      // ellipse(bezierPointsArr[i][0],bezierPointsArr[i][1], 10,10)\n      // ellipse(bezierPointsArr[i][2],bezierPointsArr[i][3], 10,10)\n      // ellipse(bezierPointsArr[i][6],bezierPointsArr[i][7], 10,10)\n      // ellipse(bezierPointsArr[i][4],bezierPointsArr[i][5], 10,10)\n      p5.bezier(bezierPointsArr[i][0], bezierPointsArr[i][1], bezierPointsArr[i][2], bezierPointsArr[i][3], bezierPointsArr[i][6], bezierPointsArr[i][7], bezierPointsArr[i][4], bezierPointsArr[i][5])\n      p5.pop()\n    }\n  }\n\n\n  function drawTextShadow(someWord) {\n    p5.textShadow.clear()\n    p5.textShadow.translate(p5.width / 2, p5.height / 2)\n    p5.textShadow.textSize(60)\n    p5.textShadow.textAlign(p5.CENTER)\n    p5.textShadow.rectMode(p5.CENTER)\n    p5.textShadow.textFont('Passion One')\n    p5.textShadow.strokeWeight(10)\n    p5.textShadow.stroke('hsl(0, 0%, 20%)')\n    p5.textShadow.text(someWord, 0, canvasY / 2.3, canvasX / 1.5, canvasY)\n    p5.textShadow.translate(-p5.width / 2, -p5.height / 2)\n    //textShadow.filter(BLUR,24)\n  }\n\n  function returnArrFromHslColor(stringInHsl) {\n    const tono = p5.color(stringInHsl),\n      h = p5.hue(tono),\n      firstPartOfSat = stringInHsl.substring(stringInHsl.indexOf(\",\") + 1),\n      satArray = firstPartOfSat.split(\",\"),\n      s = parseInt(satArray[0]),\n      l = p5.lightness(tono)\n    return [Math.round(h), Math.round(s), Math.round(l)]\n  }\n\n  function returnCollectionOfColorTones(colsArrayItem, amt) {\n    let colorValues = returnArrFromHslColor(colsArrayItem),\n      colVarAmt,\n      lightnessRandom,\n      array = []\n  \n    while (array.length < amt) {\n      colVarAmt = Math.round(Math.random() * 3)\n      lightnessRandom = Math.round(Math.random() < 0.5 ? colorValues[2] + colVarAmt : colorValues[2] - colVarAmt)\n      array.push(`hsl(${colorValues[0]}, ${colorValues[1]}%, ${lightnessRandom}%)`)\n    }\n    return array\n  }  \n\n}\n\n\n// Helpers\nfunction returnCollectionOfRotations(amt) {\n  let array = []\n  while (array.length < amt) {\n    array.push(randomFromRange(0,360))\n    // array.push(p5.random(360))\n  }\n  return array\n}\n\n\n\nfunction returnArrOfRandomSizes(amt, elmntSizeMin, elmntSizeMax) {\n  let arr = []\n  while (arr.length < amt) {\n    arr.push(Math.round(randomFromRange(elmntSizeMin, elmntSizeMax)))\n  }\n  return arr\n}\n\nfunction returnRandomFromArray(array) {\n  return array[Math.floor(Math.random() * array.length)]\n}\n\nfunction evenRandomNums(amt, min, max) {\n  const array = []\n  while (array.length < amt) {\n  // randomFromRange() nums have a 50% of being multiplied by -1 so they're evenly distributed on screen\n    array.push(Math.round(Math.random() < 0.5 ? randomFromRange(min, max) : randomFromRange(min, max) * -1))\n  }\n  return array\n}\n\nexport default class Poster extends Component {\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export var epsilon = 1.1102230246251565e-16;\nexport var splitter = 134217729;\nexport var resulterrbound = (3 + 8 * epsilon) * epsilon; // fast_expansion_sum_zeroelim routine from oritinal code\n\nexport function sum(elen, e, flen, f, h) {\n  var Q, Qnew, hh, bvirt;\n  var enow = e[0];\n  var fnow = f[0];\n  var eindex = 0;\n  var findex = 0;\n\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n\n  var hindex = 0;\n\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n\n      Q = Qnew;\n\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n} // scale_expansion_zeroelim routine from oritinal code\n\nexport function scale(elen, e, b, h) {\n  var Q, sum, hh, product1, product0;\n  var bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  var enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  var hindex = 0;\n\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n\n  for (var i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n\n  return hindex;\n}\nexport function negate(elen, e) {\n  for (var i = 0; i < elen; i++) {\n    e[i] = -e[i];\n  }\n\n  return elen;\n}\nexport function estimate(elen, e) {\n  var Q = e[0];\n\n  for (var i = 1; i < elen; i++) {\n    Q += e[i];\n  }\n\n  return Q;\n}\nexport function vec(n) {\n  return new Float64Array(n);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum } from './util.js';\nvar ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nvar ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nvar ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\nvar B = vec(4);\nvar C1 = vec(8);\nvar C2 = vec(12);\nvar D = vec(16);\nvar u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  var acxtail, acytail, bcxtail, bcytail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  var acx = ax - cx;\n  var bcx = bx - cx;\n  var acy = ay - cy;\n  var bcy = by - cy;\n  s1 = acx * bcy;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  B[3] = u3;\n  var det = estimate(4, B);\n  var errbound = ccwerrboundB * detsum;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n\n  errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C1len = sum(4, B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C2len = sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var Dlen = sum(C2len, C2, 4, u, D);\n  return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n  var detleft = (ay - cy) * (bx - cx);\n  var detright = (ax - cx) * (by - cy);\n  var det = detleft - detright;\n  if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n  var detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, scale } from './util.js';\nvar o3derrboundA = (7 + 56 * epsilon) * epsilon;\nvar o3derrboundB = (3 + 28 * epsilon) * epsilon;\nvar o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\nvar bc = vec(4);\nvar ca = vec(4);\nvar ab = vec(4);\nvar at_b = vec(4);\nvar at_c = vec(4);\nvar bt_c = vec(4);\nvar bt_a = vec(4);\nvar ct_a = vec(4);\nvar ct_b = vec(4);\nvar bct = vec(8);\nvar cat = vec(8);\nvar abt = vec(8);\nvar u = vec(4);\n\nvar _8 = vec(8);\n\nvar _8b = vec(8);\n\nvar _16 = vec(8);\n\nvar _12 = vec(12);\n\nvar fin = vec(192);\nvar fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  var tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n\n  return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  var finlen;\n  var adxtail, bdxtail, cdxtail;\n  var adytail, bdytail, cdytail;\n  var adztail, bdztail, cdztail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  var det = estimate(finlen, fin);\n  var errbound = o3derrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  var at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  var bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  var ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  var bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  var catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  var abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  var errbound = o3derrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var adz = az - dz;\n  var bdz = bz - dz;\n  var cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale } from './util.js';\nvar iccerrboundA = (10 + 96 * epsilon) * epsilon;\nvar iccerrboundB = (4 + 48 * epsilon) * epsilon;\nvar iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\nvar bc = vec(4);\nvar ca = vec(4);\nvar ab = vec(4);\nvar aa = vec(4);\nvar bb = vec(4);\nvar cc = vec(4);\nvar u = vec(4);\nvar v = vec(4);\nvar axtbc = vec(8);\nvar aytbc = vec(8);\nvar bxtca = vec(8);\nvar bytca = vec(8);\nvar cxtab = vec(8);\nvar cytab = vec(8);\nvar abt = vec(8);\nvar bct = vec(8);\nvar cat = vec(8);\nvar abtt = vec(4);\nvar bctt = vec(4);\nvar catt = vec(4);\n\nvar _8 = vec(8);\n\nvar _16 = vec(16);\n\nvar _16b = vec(16);\n\nvar _16c = vec(16);\n\nvar _32 = vec(32);\n\nvar _32b = vec(32);\n\nvar _48 = vec(48);\n\nvar _64 = vec(64);\n\nvar fin = vec(1152);\nvar fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n  finlen = sum(finlen, fin, a, alen, fin2);\n  var tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  var finlen;\n  var adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  var axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  var abtlen, bctlen, catlen;\n  var abttlen, bcttlen, cattlen;\n  var n1, n0;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, bc, adx, _8), _8, adx, _16), _16, scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16, scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16, scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  var det = estimate(finlen, fin);\n  var errbound = iccerrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n\n  if (adxtail !== 0) {\n    axtbclen = scale(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, _16), _16, scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adytail !== 0) {\n    aytbclen = scale(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, _16), _16, scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b, scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, _16), _16, scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdytail !== 0) {\n    bytcalen = scale(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, _16), _16, scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b, scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, _16), _16, scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdytail !== 0) {\n    cytablen = scale(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, _16), _16, scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n\n    if (adxtail !== 0) {\n      var len = scale(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, _16), _16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      var len2 = scale(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * adx, _16), _16, scale(len2, _8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n\n    if (adytail !== 0) {\n      var _len = scale(bctlen, bct, adytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(aytbclen, aytbc, adytail, _16), _16, scale(_len, _16c, 2 * ady, _32), _32, _48), _48);\n\n      var _len2 = scale(bcttlen, bctt, adytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len2, _8, 2 * ady, _16), _16, scale(_len2, _8, adytail, _16b), _16b, scale(_len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n\n    if (bdxtail !== 0) {\n      var _len3 = scale(catlen, cat, bdxtail, _16c);\n\n      finlen = finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, _16), _16, scale(_len3, _16c, 2 * bdx, _32), _32, _48), _48);\n\n      var _len4 = scale(cattlen, catt, bdxtail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len4, _8, 2 * bdx, _16), _16, scale(_len4, _8, bdxtail, _16b), _16b, scale(_len3, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n\n    if (bdytail !== 0) {\n      var _len5 = scale(catlen, cat, bdytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(bytcalen, bytca, bdytail, _16), _16, scale(_len5, _16c, 2 * bdy, _32), _32, _48), _48);\n\n      var _len6 = scale(cattlen, catt, bdytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len6, _8, 2 * bdy, _16), _16, scale(_len6, _8, bdytail, _16b), _16b, scale(_len5, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n\n    if (cdxtail !== 0) {\n      var _len7 = scale(abtlen, abt, cdxtail, _16c);\n\n      finlen = finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, _16), _16, scale(_len7, _16c, 2 * cdx, _32), _32, _48), _48);\n\n      var _len8 = scale(abttlen, abtt, cdxtail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len8, _8, 2 * cdx, _16), _16, scale(_len8, _8, cdxtail, _16b), _16b, scale(_len7, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n\n    if (cdytail !== 0) {\n      var _len9 = scale(abtlen, abt, cdytail, _16c);\n\n      finlen = finadd(finlen, sum(scale(cytablen, cytab, cdytail, _16), _16, scale(_len9, _16c, 2 * cdy, _32), _32, _48), _48);\n\n      var _len10 = scale(abttlen, abtt, cdytail, _8);\n\n      finlen = finadd(finlen, sum_three(scale(_len10, _8, 2 * cdy, _16), _16, scale(_len10, _8, cdytail, _16b), _16b, scale(_len9, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  var adx = ax - dx;\n  var bdx = bx - dx;\n  var cdx = cx - dx;\n  var ady = ay - dy;\n  var bdy = by - dy;\n  var cdy = cy - dy;\n  var bdxcdy = bdx * cdy;\n  var cdxbdy = cdx * bdy;\n  var alift = adx * adx + ady * ady;\n  var cdxady = cdx * ady;\n  var adxcdy = adx * cdy;\n  var blift = bdx * bdx + bdy * bdy;\n  var adxbdy = adx * bdy;\n  var bdxady = bdx * ady;\n  var clift = cdx * cdx + cdy * cdy;\n  var det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  var permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  var errbound = iccerrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  var adx = ax - dx;\n  var ady = ay - dy;\n  var bdx = bx - dx;\n  var bdy = by - dy;\n  var cdx = cx - dx;\n  var cdy = cy - dy;\n  var abdet = adx * bdy - bdx * ady;\n  var bcdet = bdx * cdy - cdx * bdy;\n  var cadet = cdx * ady - adx * cdy;\n  var alift = adx * adx + ady * ady;\n  var blift = bdx * bdx + bdy * bdy;\n  var clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nvar isperrboundA = (16 + 224 * epsilon) * epsilon;\nvar isperrboundB = (5 + 72 * epsilon) * epsilon;\nvar isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nvar ab = vec(4);\nvar bc = vec(4);\nvar cd = vec(4);\nvar de = vec(4);\nvar ea = vec(4);\nvar ac = vec(4);\nvar bd = vec(4);\nvar ce = vec(4);\nvar da = vec(4);\nvar eb = vec(4);\nvar abc = vec(24);\nvar bcd = vec(24);\nvar cde = vec(24);\nvar dea = vec(24);\nvar eab = vec(24);\nvar abd = vec(24);\nvar bce = vec(24);\nvar cda = vec(24);\nvar deb = vec(24);\nvar eac = vec(24);\nvar adet = vec(1152);\nvar bdet = vec(1152);\nvar cdet = vec(1152);\nvar ddet = vec(1152);\nvar edet = vec(1152);\nvar abdet = vec(2304);\nvar cddet = vec(2304);\nvar cdedet = vec(3456);\nvar deter = vec(5760);\n\nvar _8 = vec(8);\n\nvar _8b = vec(8);\n\nvar _8c = vec(8);\n\nvar _16 = vec(16);\n\nvar _24 = vec(24);\n\nvar _48 = vec(48);\n\nvar _48b = vec(48);\n\nvar _96 = vec(96);\n\nvar _192 = vec(192);\n\nvar _384x = vec(384);\n\nvar _384y = vec(384);\n\nvar _384z = vec(384);\n\nvar _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  var len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  var abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  var bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  var cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  var dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  var eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  var abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  var bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  var cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  var deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  var eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  var deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\n\nvar xdet = vec(96);\nvar ydet = vec(96);\nvar zdet = vec(96);\nvar fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  var len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  var ab3, bc3, cd3, da3, ac3, bd3;\n  var aextail, bextail, cextail, dextail;\n  var aeytail, beytail, ceytail, deytail;\n  var aeztail, beztail, ceztail, deztail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n  var aex = ax - ex;\n  var bex = bx - ex;\n  var cex = cx - ex;\n  var dex = dx - ex;\n  var aey = ay - ey;\n  var bey = by - ey;\n  var cey = cy - ey;\n  var dey = dy - ey;\n  var aez = az - ez;\n  var bez = bz - ez;\n  var cez = cz - ez;\n  var dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  var finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  var det = estimate(finlen, fin);\n  var errbound = isperrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  var abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  var bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  var cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  var daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  var aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  var bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  var aex = ax - ex;\n  var bex = bx - ex;\n  var cex = cx - ex;\n  var dex = dx - ex;\n  var aey = ay - ey;\n  var bey = by - ey;\n  var cey = cy - ey;\n  var dey = dy - ey;\n  var aez = az - ez;\n  var bez = bz - ez;\n  var cez = cz - ez;\n  var dez = dz - ez;\n  var aexbey = aex * bey;\n  var bexaey = bex * aey;\n  var ab = aexbey - bexaey;\n  var bexcey = bex * cey;\n  var cexbey = cex * bey;\n  var bc = bexcey - cexbey;\n  var cexdey = cex * dey;\n  var dexcey = dex * cey;\n  var cd = cexdey - dexcey;\n  var dexaey = dex * aey;\n  var aexdey = aex * dey;\n  var da = dexaey - aexdey;\n  var aexcey = aex * cey;\n  var cexaey = cex * aey;\n  var ac = aexcey - cexaey;\n  var bexdey = bex * dey;\n  var dexbey = dex * bey;\n  var bd = bexdey - dexbey;\n  var abc = aez * bc - bez * ac + cez * ab;\n  var bcd = bez * cd - cez * bd + dez * bc;\n  var cda = cez * da + dez * ac + aez * cd;\n  var dab = dez * ab + aez * bd + bez * da;\n  var alift = aex * aex + aey * aey + aez * aez;\n  var blift = bex * bex + bey * bey + bez * bez;\n  var clift = cex * cex + cey * cey + cez * cez;\n  var dlift = dex * dex + dey * dey + dez * dez;\n  var det = clift * dab - dlift * abc + (alift * bcd - blift * cda);\n  var aezplus = Math.abs(aez);\n  var bezplus = Math.abs(bez);\n  var cezplus = Math.abs(cez);\n  var dezplus = Math.abs(dez);\n  var aexbeyplus = Math.abs(aexbey);\n  var bexaeyplus = Math.abs(bexaey);\n  var bexceyplus = Math.abs(bexcey);\n  var cexbeyplus = Math.abs(cexbey);\n  var cexdeyplus = Math.abs(cexdey);\n  var dexceyplus = Math.abs(dexcey);\n  var dexaeyplus = Math.abs(dexaey);\n  var aexdeyplus = Math.abs(aexdey);\n  var aexceyplus = Math.abs(aexcey);\n  var cexaeyplus = Math.abs(cexaey);\n  var bexdeyplus = Math.abs(bexdey);\n  var dexbeyplus = Math.abs(dexbey);\n  var permanent = ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift + ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift + ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift + ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n  var errbound = isperrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  var aex = pax - pex;\n  var bex = pbx - pex;\n  var cex = pcx - pex;\n  var dex = pdx - pex;\n  var aey = pay - pey;\n  var bey = pby - pey;\n  var cey = pcy - pey;\n  var dey = pdy - pey;\n  var aez = paz - pez;\n  var bez = pbz - pez;\n  var cez = pcz - pez;\n  var dez = pdz - pez;\n  var ab = aex * bey - bex * aey;\n  var bc = bex * cey - cex * bey;\n  var cd = cex * dey - dex * cey;\n  var da = dex * aey - aex * dey;\n  var ac = aex * cey - cex * aey;\n  var bd = bex * dey - dex * bey;\n  var abc = aez * bc - bez * ac + cez * ab;\n  var bcd = bez * cd - cez * bd + dez * bc;\n  var cda = cez * da + dez * ac + aez * cd;\n  var dab = dez * ab + aez * bd + bez * da;\n  var alift = aex * aex + aey * aey + aez * aez;\n  var blift = bex * bex + bey * bey + bez * bez;\n  var clift = cex * cex + cey * cey + cez * cez;\n  var dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}","import _classCallCheck from \"/Users/jorgemartinez/giorgio-martini-website/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jorgemartinez/giorgio-martini-website/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar EPSILON = Math.pow(2, -52);\nvar EDGE_STACK = new Uint32Array(512);\nimport { orient2d } from 'robust-predicates';\n\nvar Delaunator = /*#__PURE__*/function () {\n  function Delaunator(coords) {\n    _classCallCheck(this, Delaunator);\n\n    var n = coords.length >> 1;\n    if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n    this.coords = coords; // arrays that will store the triangulation graph\n\n    var maxTriangles = Math.max(2 * n - 5, 0);\n    this._triangles = new Uint32Array(maxTriangles * 3);\n    this._halfedges = new Int32Array(maxTriangles * 3); // temporary arrays for tracking the edges of the advancing convex hull\n\n    this._hashSize = Math.ceil(Math.sqrt(n));\n    this._hullPrev = new Uint32Array(n); // edge to prev edge\n\n    this._hullNext = new Uint32Array(n); // edge to next edge\n\n    this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n\n    this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n    // temporary arrays for sorting points\n\n    this._ids = new Uint32Array(n);\n    this._dists = new Float64Array(n);\n    this.update();\n  }\n\n  _createClass(Delaunator, [{\n    key: \"update\",\n    value: function update() {\n      var coords = this.coords,\n          hullPrev = this._hullPrev,\n          hullNext = this._hullNext,\n          hullTri = this._hullTri,\n          hullHash = this._hullHash;\n      var n = coords.length >> 1; // populate an array of point indices; calculate input data bbox\n\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < n; i++) {\n        var x = coords[2 * i];\n        var y = coords[2 * i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n        this._ids[i] = i;\n      }\n\n      var cx = (minX + maxX) / 2;\n      var cy = (minY + maxY) / 2;\n      var minDist = Infinity;\n      var i0, i1, i2; // pick a seed point close to the center\n\n      for (var _i = 0; _i < n; _i++) {\n        var d = dist(cx, cy, coords[2 * _i], coords[2 * _i + 1]);\n\n        if (d < minDist) {\n          i0 = _i;\n          minDist = d;\n        }\n      }\n\n      var i0x = coords[2 * i0];\n      var i0y = coords[2 * i0 + 1];\n      minDist = Infinity; // find the point closest to the seed\n\n      for (var _i2 = 0; _i2 < n; _i2++) {\n        if (_i2 === i0) continue;\n\n        var _d = dist(i0x, i0y, coords[2 * _i2], coords[2 * _i2 + 1]);\n\n        if (_d < minDist && _d > 0) {\n          i1 = _i2;\n          minDist = _d;\n        }\n      }\n\n      var i1x = coords[2 * i1];\n      var i1y = coords[2 * i1 + 1];\n      var minRadius = Infinity; // find the third point which forms the smallest circumcircle with the first two\n\n      for (var _i3 = 0; _i3 < n; _i3++) {\n        if (_i3 === i0 || _i3 === i1) continue;\n        var r = circumradius(i0x, i0y, i1x, i1y, coords[2 * _i3], coords[2 * _i3 + 1]);\n\n        if (r < minRadius) {\n          i2 = _i3;\n          minRadius = r;\n        }\n      }\n\n      var i2x = coords[2 * i2];\n      var i2y = coords[2 * i2 + 1];\n\n      if (minRadius === Infinity) {\n        // order collinear points by dx (or dy if all x are identical)\n        // and return the list as a hull\n        for (var _i4 = 0; _i4 < n; _i4++) {\n          this._dists[_i4] = coords[2 * _i4] - coords[0] || coords[2 * _i4 + 1] - coords[1];\n        }\n\n        quicksort(this._ids, this._dists, 0, n - 1);\n        var hull = new Uint32Array(n);\n        var j = 0;\n\n        for (var _i5 = 0, d0 = -Infinity; _i5 < n; _i5++) {\n          var id = this._ids[_i5];\n\n          if (this._dists[id] > d0) {\n            hull[j++] = id;\n            d0 = this._dists[id];\n          }\n        }\n\n        this.hull = hull.subarray(0, j);\n        this.triangles = new Uint32Array(0);\n        this.halfedges = new Uint32Array(0);\n        return;\n      } // swap the order of the seed points for counter-clockwise orientation\n\n\n      if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n        var _i6 = i1;\n        var _x = i1x;\n        var _y = i1y;\n        i1 = i2;\n        i1x = i2x;\n        i1y = i2y;\n        i2 = _i6;\n        i2x = _x;\n        i2y = _y;\n      }\n\n      var center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n      this._cx = center.x;\n      this._cy = center.y;\n\n      for (var _i7 = 0; _i7 < n; _i7++) {\n        this._dists[_i7] = dist(coords[2 * _i7], coords[2 * _i7 + 1], center.x, center.y);\n      } // sort the points by distance from the seed triangle circumcenter\n\n\n      quicksort(this._ids, this._dists, 0, n - 1); // set up the seed triangle as the starting hull\n\n      this._hullStart = i0;\n      var hullSize = 3;\n      hullNext[i0] = hullPrev[i2] = i1;\n      hullNext[i1] = hullPrev[i0] = i2;\n      hullNext[i2] = hullPrev[i1] = i0;\n      hullTri[i0] = 0;\n      hullTri[i1] = 1;\n      hullTri[i2] = 2;\n      hullHash.fill(-1);\n      hullHash[this._hashKey(i0x, i0y)] = i0;\n      hullHash[this._hashKey(i1x, i1y)] = i1;\n      hullHash[this._hashKey(i2x, i2y)] = i2;\n      this.trianglesLen = 0;\n\n      this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n      for (var k = 0, xp, yp; k < this._ids.length; k++) {\n        var _i8 = this._ids[k];\n        var _x2 = coords[2 * _i8];\n        var _y2 = coords[2 * _i8 + 1]; // skip near-duplicate points\n\n        if (k > 0 && Math.abs(_x2 - xp) <= EPSILON && Math.abs(_y2 - yp) <= EPSILON) continue;\n        xp = _x2;\n        yp = _y2; // skip seed triangle points\n\n        if (_i8 === i0 || _i8 === i1 || _i8 === i2) continue; // find a visible edge on the convex hull using edge hash\n\n        var start = 0;\n\n        for (var _j = 0, key = this._hashKey(_x2, _y2); _j < this._hashSize; _j++) {\n          start = hullHash[(key + _j) % this._hashSize];\n          if (start !== -1 && start !== hullNext[start]) break;\n        }\n\n        start = hullPrev[start];\n        var e = start,\n            q = void 0;\n\n        while (q = hullNext[e], orient2d(_x2, _y2, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n          e = q;\n\n          if (e === start) {\n            e = -1;\n            break;\n          }\n        }\n\n        if (e === -1) continue; // likely a near-duplicate point; skip it\n        // add the first triangle from the point\n\n        var t = this._addTriangle(e, _i8, hullNext[e], -1, -1, hullTri[e]); // recursively flip triangles from the point until they satisfy the Delaunay condition\n\n\n        hullTri[_i8] = this._legalize(t + 2);\n        hullTri[e] = t; // keep track of boundary triangles on the hull\n\n        hullSize++; // walk forward through the hull, adding more triangles and flipping recursively\n\n        var _n = hullNext[e];\n\n        while (q = hullNext[_n], orient2d(_x2, _y2, coords[2 * _n], coords[2 * _n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n          t = this._addTriangle(_n, _i8, q, hullTri[_i8], -1, hullTri[_n]);\n          hullTri[_i8] = this._legalize(t + 2);\n          hullNext[_n] = _n; // mark as removed\n\n          hullSize--;\n          _n = q;\n        } // walk backward from the other side, adding more triangles and flipping\n\n\n        if (e === start) {\n          while (q = hullPrev[e], orient2d(_x2, _y2, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n            t = this._addTriangle(q, _i8, e, -1, hullTri[e], hullTri[q]);\n\n            this._legalize(t + 2);\n\n            hullTri[q] = t;\n            hullNext[e] = e; // mark as removed\n\n            hullSize--;\n            e = q;\n          }\n        } // update the hull indices\n\n\n        this._hullStart = hullPrev[_i8] = e;\n        hullNext[e] = hullPrev[_n] = _i8;\n        hullNext[_i8] = _n; // save the two new edges in the hash table\n\n        hullHash[this._hashKey(_x2, _y2)] = _i8;\n        hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n      }\n\n      this.hull = new Uint32Array(hullSize);\n\n      for (var _i9 = 0, _e = this._hullStart; _i9 < hullSize; _i9++) {\n        this.hull[_i9] = _e;\n        _e = hullNext[_e];\n      } // trim typed triangle mesh arrays\n\n\n      this.triangles = this._triangles.subarray(0, this.trianglesLen);\n      this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n  }, {\n    key: \"_hashKey\",\n    value: function _hashKey(x, y) {\n      return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n  }, {\n    key: \"_legalize\",\n    value: function _legalize(a) {\n      var triangles = this._triangles,\n          halfedges = this._halfedges,\n          coords = this.coords;\n      var i = 0;\n      var ar = 0; // recursion eliminated with a fixed-size stack\n\n      while (true) {\n        var b = halfedges[a];\n        /* if the pair of triangles doesn't satisfy the Delaunay condition\n         * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n         * then do the same check/flip recursively for the new pair of triangles\n         *\n         *           pl                    pl\n         *          /||\\                  /  \\\n         *       al/ || \\bl            al/    \\a\n         *        /  ||  \\              /      \\\n         *       /  a||b  \\    flip    /___ar___\\\n         *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n         *        \\  ||  /              \\      /\n         *       ar\\ || /br             b\\    /br\n         *          \\||/                  \\  /\n         *           pr                    pr\n         */\n\n        var a0 = a - a % 3;\n        ar = a0 + (a + 2) % 3;\n\n        if (b === -1) {\n          // convex hull edge\n          if (i === 0) break;\n          a = EDGE_STACK[--i];\n          continue;\n        }\n\n        var b0 = b - b % 3;\n        var al = a0 + (a + 1) % 3;\n        var bl = b0 + (b + 2) % 3;\n        var p0 = triangles[ar];\n        var pr = triangles[a];\n        var pl = triangles[al];\n        var p1 = triangles[bl];\n        var illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n\n        if (illegal) {\n          triangles[a] = p1;\n          triangles[b] = p0;\n          var hbl = halfedges[bl]; // edge swapped on the other side of the hull (rare); fix the halfedge reference\n\n          if (hbl === -1) {\n            var e = this._hullStart;\n\n            do {\n              if (this._hullTri[e] === bl) {\n                this._hullTri[e] = a;\n                break;\n              }\n\n              e = this._hullPrev[e];\n            } while (e !== this._hullStart);\n          }\n\n          this._link(a, hbl);\n\n          this._link(b, halfedges[ar]);\n\n          this._link(ar, bl);\n\n          var br = b0 + (b + 1) % 3; // don't worry about hitting the cap: it can only happen on extremely degenerate input\n\n          if (i < EDGE_STACK.length) {\n            EDGE_STACK[i++] = br;\n          }\n        } else {\n          if (i === 0) break;\n          a = EDGE_STACK[--i];\n        }\n      }\n\n      return ar;\n    }\n  }, {\n    key: \"_link\",\n    value: function _link(a, b) {\n      this._halfedges[a] = b;\n      if (b !== -1) this._halfedges[b] = a;\n    } // add a new triangle given vertex indices and adjacent half-edge ids\n\n  }, {\n    key: \"_addTriangle\",\n    value: function _addTriangle(i0, i1, i2, a, b, c) {\n      var t = this.trianglesLen;\n      this._triangles[t] = i0;\n      this._triangles[t + 1] = i1;\n      this._triangles[t + 2] = i2;\n\n      this._link(t, a);\n\n      this._link(t + 1, b);\n\n      this._link(t + 2, c);\n\n      this.trianglesLen += 3;\n      return t;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var getX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetX;\n      var getY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetY;\n      var n = points.length;\n      var coords = new Float64Array(n * 2);\n\n      for (var i = 0; i < n; i++) {\n        var p = points[i];\n        coords[2 * i] = getX(p);\n        coords[2 * i + 1] = getY(p);\n      }\n\n      return new Delaunator(coords);\n    }\n  }]);\n\n  return Delaunator;\n}(); // monotonically increases with real angle, but doesn't need expensive trigonometry\n\n\nexport { Delaunator as default };\n\nfunction pseudoAngle(dx, dy) {\n  var p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n  var dx = ax - bx;\n  var dy = ay - by;\n  return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  var dx = ax - px;\n  var dy = ay - py;\n  var ex = bx - px;\n  var ey = by - py;\n  var fx = cx - px;\n  var fy = cy - py;\n  var ap = dx * dx + dy * dy;\n  var bp = ex * ex + ey * ey;\n  var cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n  var dx = bx - ax;\n  var dy = by - ay;\n  var ex = cx - ax;\n  var ey = cy - ay;\n  var bl = dx * dx + dy * dy;\n  var cl = ex * ex + ey * ey;\n  var d = 0.5 / (dx * ey - dy * ex);\n  var x = (ey * bl - dy * cl) * d;\n  var y = (dx * cl - ex * bl) * d;\n  return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n  var dx = bx - ax;\n  var dy = by - ay;\n  var ex = cx - ax;\n  var ey = cy - ay;\n  var bl = dx * dx + dy * dy;\n  var cl = ex * ex + ey * ey;\n  var d = 0.5 / (dx * ey - dy * ex);\n  var x = ax + (ey * bl - dy * cl) * d;\n  var y = ay + (dx * cl - ex * bl) * d;\n  return {\n    x: x,\n    y: y\n  };\n}\n\nfunction quicksort(ids, dists, left, right) {\n  if (right - left <= 20) {\n    for (var i = left + 1; i <= right; i++) {\n      var temp = ids[i];\n      var tempDist = dists[temp];\n      var j = i - 1;\n\n      while (j >= left && dists[ids[j]] > tempDist) {\n        ids[j + 1] = ids[j--];\n      }\n\n      ids[j + 1] = temp;\n    }\n  } else {\n    var median = left + right >> 1;\n\n    var _i10 = left + 1;\n\n    var _j2 = right;\n    swap(ids, median, _i10);\n    if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n    if (dists[ids[_i10]] > dists[ids[right]]) swap(ids, _i10, right);\n    if (dists[ids[left]] > dists[ids[_i10]]) swap(ids, left, _i10);\n    var _temp = ids[_i10];\n    var _tempDist = dists[_temp];\n\n    while (true) {\n      do {\n        _i10++;\n      } while (dists[ids[_i10]] < _tempDist);\n\n      do {\n        _j2--;\n      } while (dists[ids[_j2]] > _tempDist);\n\n      if (_j2 < _i10) break;\n      swap(ids, _i10, _j2);\n    }\n\n    ids[left + 1] = ids[_j2];\n    ids[_j2] = _temp;\n\n    if (right - _i10 + 1 >= _j2 - left) {\n      quicksort(ids, dists, _i10, right);\n      quicksort(ids, dists, left, _j2 - 1);\n    } else {\n      quicksort(ids, dists, left, _j2 - 1);\n      quicksort(ids, dists, _i10, right);\n    }\n  }\n}\n\nfunction swap(arr, i, j) {\n  var tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n  return p[0];\n}\n\nfunction defaultGetY(p) {\n  return p[1];\n}","import React, { Component } from 'react'\nimport { loadableP5 as P5Wrapper } from '../components/loadable'\nimport { getRandomArbitrary, getRandomFromArray } from '../helpers'\nimport p5, { Vector } from 'p5'\nimport Delaunator from 'delaunator'\n\nlet triangles\nlet canvasSize = 600\nlet vertexAmt\nlet vertex\n\nlet palette = [\n  '#413C58',\n  '#A3C4BC',\n  '#BFD7B5',\n  '#E7EFC5',\n  '#F2DDA4'\n]\n\nfunction Sketch(p5) {\n  // helper...\n  function getRandomFromArray(items) {\n    let result = items[Math.floor(Math.random() * items.length)]\n    return result\n  }\n\n  p5.setup = () => {\n    p5.createCanvas(600, 600)\n    p5.background(255)\n    initializeTriangulation()\n  }\n\n  p5.draw = () => {\n    p5.background(0)\n    triangles.forEach(t => t.draw())\n  }\n\n  p5.mouseClicked = () => {\n    initializeTriangulation()\n  }\n\n  function initializeTriangulation() {\n    triangles = [];\n    let pts = [];\n    // push canvas rect points\n    pts.push(p5.createVector(0, 0))\n    pts.push(p5.createVector(p5.width, 0))\n    pts.push(p5.createVector(p5.width, p5.height))\n    pts.push(p5.createVector(0, p5.height))\n\n    var n = 20\n    for (let i = 0; i < n; i++) {\n      pts.push(p5.createVector(~~p5.random(p5.width), ~~p5.random(p5.height)))\n    }\n\n    // Now, let's use Delaunay.js\n    // Delaunay.triangulate expect a list of vertices (which should be a bunch of two-element arrays, representing 2D Euclidean points)\n    // and it will return you a giant array, arranged in triplets, representing triangles by indices into the passed array\n    // Array.map function let's us create an Array of 2 elements arrays [ [x,y],[x,y],..] from our array of PVector [ PVector(x,y), PVector(x,y), ... ]\n    let delunaySource = pts.map(pt => [pt.x, pt.y]).flat(Infinity)\n    const triangulation = new Delaunator(delunaySource)\n\n    //create Triangles object using indices returned by Delaunay.triangulate\n    for (let i = 0; i < triangulation.triangles.length; i += 3) {\n      triangles.push(new Triangle(\n        pts[triangulation.triangles[i]],\n        pts[triangulation.triangles[i + 1]],\n        pts[triangulation.triangles[i + 2]]\n      ))\n    }\n  }\n\n  // class for keeping triangles from 3 PVectors\n  function Triangle(_a, _b, _c) {\n    this.a = _a\n    this.b = _b\n    this.c = _c\n    this.fill = getRandomFromArray(palette)\n    this.strokeColor = getRandomFromArray(palette)\n\n    this.draw = function () {\n      p5.fill(this.fill)\n      p5.triangle(this.a.x, this.a.y, this.b.x, this.b.y, this.c.x, this.c.y)\n      p5.stroke(30)\n      p5.strokeJoin(p5.BEVEL)\n      p5.strokeWeight(8)\n      p5.triangle(this.a.x, this.a.y, this.b.x, this.b.y, this.c.x, this.c.y)\n    }\n  }\n}\n\nexport default class Tris extends Component {\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, { useLayoutEffect } from \"react\"\nimport Layout from '../components/Layout'\nimport DancingLines from \"../sketches/DancingLines\"\nimport ProbableFuture from \"../sketches/ProbableFuture\"\nimport Fragment from \"../sketches/Fragment\"\nimport Mosaic from '../sketches/mosaic'\nimport Protocol from '../sketches/protocol'\nimport Poster from '../sketches/poster'\nimport Tris from '../sketches/tris'\nimport \"tachyons/css/tachyons.min.css\"\n\nlet sketches = {\n  dancingLines: <DancingLines />,\n  probableFuture: <ProbableFuture />,\n  fragment: <Fragment />,\n  mosaic: <Mosaic />,\n  protocol: <Protocol />,\n  poster: <Poster />,\n  tris: <Tris />,\n}\n\nconst BasicTemplate = (props) => {\n  let sketch\n  const { pageContext } = props\n  const { pageContent } = pageContext\n\n  for (const [key, value] of Object.entries(sketches)) {\n    if (pageContent[2].item.toLowerCase() === key.toLowerCase()) sketch = value\n  }\n\n  !sketch && console.log(\"Sketch not found...\")\n\n  let title = pageContent[0].item\n  let description = pageContent[1].item\n  let columns = pageContent[3]?.item\n  \n  return (\n    <Layout isDarkMode={false}>\n      <div className=\"flex pt5\">\n        <div className=\"pr3 flex flex1\">\n          <div>\n            <p className=\"b f2\">{title}</p>\n            <p className=\"f4 lh-copy measure\">{description}</p>\n          </div>\n        </div>\n        <div className=\"flex2\">\n          {sketch}\n        </div>\n      </div>\n    </Layout>        \n  )\n}\n\nexport default BasicTemplate\n"],"names":["randomColor","seed","colorDictionary","loadColorBounds","colorRanges","pickHue","options","length","hue","randomWithin","hueRange","getRealHueRange","step","j","parseInt","getHueRange","pickSaturation","luminosity","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","i","s1","v1","s2","v2","m","colorInput","number","color","match","HexToHSB","colorName","range","golden_ratio","r","floor","max","min","rnd","rgb","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","round","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","undefined","TypeError","count","totalColors","colors","push","factory","module","exports","isObject","isArray","SPECIES","wellKnownSymbol","originalArray","C","constructor","Array","prototype","arraySpeciesConstructor","toLength","bind","flattenIntoArray","target","original","source","sourceLen","start","depth","mapper","thisArg","element","targetIndex","sourceIndex","mapFn","aFunction","fn","that","call","a","apply","arguments","classof","arg","$","toObject","toInteger","arraySpeciesCreate","proto","flat","depthArg","O","this","A","getRandomArbitrary","dancingLine1","dancingLine2","Sketch","p5","setup","createCanvas","background","dancingLine","draw","translate","width","height","display","flip","history","col","createVector","x1Angle","y1Angle","x2Angle","y2Angle","r1","r2","set","sin","x","y","splice","forEach","linea","stroke","strokeWeight","line","x1AngleOff","y1AngleOff","x2AngleOff","y2AngleOff","DancingLines","render","sketch","Component","grid","canvasWidth","WEBGL","smooth","cols","rows","randomLevelFromHsl","size","randomFromRange","circle","_grid","rotateX","frameRate","slide","fillColor","xpos","ypos","noStroke","fill","ellipse","amt","mult","toFixed","img","w","ProbableFuture","matrix","buildNewMatrix","xS","yS","preload","loadImage","_newCols","map","mouseX","newCols","ceil","_newRows","mouseY","newRows","image","cell","get","saveColors","array","shuffleArray","ellipseMode","CORNER","canvas","xSpacing","ySpacing","dotsSize","Fragment","gridAmount","palette","getRandomFromArray","items","Spot","_x","_y","xoff","yoff","randomNumber","HALF_PI","PI","TWO_PI","rotate","col1","arc","col2","col3","col4","randomSign","pop","_items","randomColId","frameCount","mouseOver","mouseOut","bg","circle1","circle2","squares","c1Opts","c2Opts","squaresOpts","Mosaic","cropElement","opts","angle","introAngle","outroAngle","posArray","introPosArray","outroPosArray","animation","resting","fade","isFill","drawingSettings","noFill","generatePositions","angleMode","DEGREES","minSize","maxSize","evenRandomNumber","cropRadius","strokeMin","strokeMax","pos","subtractor","rotation","rectMode","CENTER","rect","outroRotation","blendMode","REPLACE","DIFFERENCE","filter","INVERT","randomXposForBubbles","randomYposForBubbles","randomXposForRects","randomYposForRects","randomXposForLines","randomYposForLines","colsArray","randomSizesForBubbles","randomSizesForRects","colorTonesForBubbles","colorTonesForRect","collectionOfRotations","linesAngle","collectionOfLengths","someWord","initialBubblesXPos","initialBubblesYPos","Protocol","textArray","bubblesArr","linesArr","canvasX","canvasY","amountOfBubbles","amountOfRects","amountOfLines","Bubble","initialXpos","initialYpos","indexOfArrayOfRandomXposForBubbles","indexOfArrayOfRandomYposForBubbles","randomSizesArr","vel","strength","drag","diameter","tone","wobble","force","Vector","add","returnlinesAngle","returnCollectionOfLengths","lengthMax","lengthsArray","collectionOfLengthsElement","xPos","yPos","acc","slideIn","sub","strokeCap","SQUARE","addText","textSize","textAlign","textFont","text","returnCollectionOfColorTones","colsArrayItem","colVarAmt","lightnessRandom","colorValues","stringInHsl","tono","satArray","substring","indexOf","split","l","lightness","returnArrFromHslColor","colorMode","HSB","evenRandomNums","returnArrOfRandomSizes","returnCollectionOfRotations","returnRandomFromArray","rot","o","elementSize","drawRects","mouseClicked","elmntSizeMin","elmntSizeMax","arr","Poster","_defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","elen","e","flen","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","abs","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_i","_j","_0","s0","t1","t0","u3","acx","bcx","acy","bcy","errbound","C1len","C2len","Dlen","orient2dadapt","triangles","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","coords","instance","Constructor","_classCallCheck","Error","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","update","protoProps","staticProps","value","points","getX","defaultGetX","getY","defaultGetY","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i0","i1","i2","minDist","d","dist","i0x","i0y","_i2","_d","i1x","i1y","minRadius","_i3","circumradius","i2x","i2y","_i4","quicksort","hull","_i5","d0","id","subarray","halfedges","_i6","center","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_i7","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","_i8","_x2","_y2","_legalize","_n","_i9","_e","px","py","fx","fy","bp","cp","ar","a0","b0","al","p0","pr","pl","p1","hbl","_link","br","ids","dists","left","right","temp","tempDist","_i10","_j2","swap","_temp","_tempDist","tmp","initializeTriangulation","pts","delunaySource","pt","triangulation","Triangle","_a","_b","_c","strokeColor","triangle","strokeJoin","BEVEL","Tris","sketches","dancingLines","probableFuture","fragment","mosaic","protocol","poster","tris","pageContent","pageContext","entries","item","toLowerCase","console","log","title","description","Layout","isDarkMode","className"],"sourceRoot":""}