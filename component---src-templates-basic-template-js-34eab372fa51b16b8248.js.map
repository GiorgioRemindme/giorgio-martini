{"version":3,"file":"component---src-templates-basic-template-js-34eab372fa51b16b8248.js","mappings":"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","sources":["webpack://giorgio-martini-website/./src/helpers.js","webpack://giorgio-martini-website/./src/sketches/DancingLines.js","webpack://giorgio-martini-website/./src/sketches/ProbableFuture.js","webpack://giorgio-martini-website/./src/sketches/Fragment.js","webpack://giorgio-martini-website/./src/sketches/mosaic.js","webpack://giorgio-martini-website/./src/sketches/protocol.js","webpack://giorgio-martini-website/./src/templates/basicTemplate.js"],"sourcesContent":["export const getRandomArbitrary = (min, max) => {\n  return Math.random() * (max - min) + min;\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet dancingLine1\nlet dancingLine2\n\nfunction isOdd(num) { // TODO move to utils\n  return num % 2;\n}\n\nfunction Sketch(p5) {\n  \n  p5.setup = () => {\n    p5.createCanvas(1024,600)\n    p5.background(\"#18020C\")\n    dancingLine1 = dancingLine(false, p5)\n    dancingLine2 = dancingLine(true, p5)\n  }\n\n  p5.draw = () => {\n    p5.background(\"#18020C\")\n    p5.translate(p5.width/2, p5.height/2)\n    dancingLine1.display()\n    dancingLine2.display()\n  }\n}\n\nfunction dancingLine(flip = false, p5) {\n  let history = []\n  let linesAmt =60\n  let col = 255\n  let v1 = p5.createVector(0,0)\n  let v2 = p5.createVector(0,0)\n  \n  let x1Angle = flip ? 90 : 0\n  let y1Angle = flip ? 90 : 0\n  let x2Angle = flip ? 90 : 0\n  let y2Angle = flip ? 90 : 0\n\n  let x1AngleOff = 0.03\n  let y1AngleOff = 0.002\n  let x2AngleOff = 0.015\n  let y2AngleOff = 0.02  \n  \n  let r1 = flip ? 250 : 300 \n  let r2 = flip ? 250 : 300 \n\n  function display() {\n    v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\n    v2.set(r2 * p5.sin(x2Angle), r2 * p5.sin(y2Angle))\n\n    history.push([v1.x, v1.y, v2.x, v2.y]) \n    \n    if (history.length > linesAmt) history.splice(0,1)\n    \n    col = flip\n      ? \"#E5FFDE\"\n      : \"#634B66\"\n\n    history.forEach((linea, i) => {\n      p5.stroke(col) \n      p5.strokeWeight(2)\n      p5.line(linea[0],linea[1],linea[2],linea[3])\n    })\n\n    x1Angle += flip ? x1AngleOff : x1AngleOff + 0.01\n    y1Angle += flip ? y1AngleOff : y1AngleOff + 0.01\n    x2Angle += flip ? x2AngleOff : x2AngleOff + 0.01\n    y2Angle += flip ? y2AngleOff : y2AngleOff + 0.01\n  }\n\n  return {\n    display,\n  }\n}\n\nexport default class DancingLines extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet canvasWidth = 400\nlet canvasHeight = canvasWidth*1.5\nlet row\nlet grid\nlet amtOfHorizontalCircles = 20\nlet linesAmt = 50\nlet ySpacing = 10\nlet lineSpacing = canvasHeight/linesAmt\nconst interval = 500\nlet circleSizeMultiplier = 9 \nconst circleSizeProbability = 0.6   \nlet rotation = 6.7\n\n\nfunction Sketch(p5) {\n\n  const createCircle = (fillColor, x, y, maxRadius) => {\n    let xpos = x\n    let ypos = y\n     return {\n       xpos,\n       ypos,\n       display() {\n         p5.noStroke()\n         p5.fill(fillColor)\n         p5.ellipse(xpos, ypos, maxRadius, maxRadius)\n       },\n       slide(amt) {\n         if( ypos >  linesAmt * lineSpacing ) {\n           maxRadius = randomCircleSize(circleSizeMultiplier, circleSizeProbability)\n           ypos = lineSpacing\n         }\n         ypos += amt\n       },\n     }\n    }\n    \n    function randomLevelFromHsl(h, s, min, max) {\n      // Probability of color being more lit\n      const r = p5.random(1)\n      if( r > 0.7 ) { \n        return `hsl(${h}, ${s}%, ${p5.random(min, max).toFixed()}%)`   \n      }\n      return `hsl(${h}, ${s}%, ${p5.random(min/2, max/2).toFixed()}%)` \n    }\n    \n    function randomCircleSize(multiplier, probabilityToBeSmall/* e.g. 0.7 */) {\n      // Probability of size\n      const r = p5.random(1)\n      if( r < probabilityToBeSmall ) { \n        return r * multiplier/2\n      }\n      return r * multiplier\n    }\n    \n    function createLine(arr, amt, startingPoint, y) {\n      if( arr.length < amt) {\n         arr.push(createCircle(randomLevelFromHsl(20, 80, 20, 50), startingPoint,  y, randomCircleSize(circleSizeMultiplier, circleSizeProbability) ))\n         createLine(arr, amt, startingPoint += p5.width/amtOfHorizontalCircles, y)\n      }\n      return arr\n    }\n    \n    function createGrid(arr, linesAmt, y) {\n      if( arr.length < linesAmt) {\n        arr.push(createLine([], amtOfHorizontalCircles, 0, y))\n        createGrid(arr, linesAmt, y += lineSpacing)} \n      return arr\n    }\n    \n    function slideRow() {\n      // shifts heights, and moves y's to begginig of they are higher tha Height\n      grid.forEach( (line) => {\n        line.forEach( x => {\n        x.slide(ySpacing)\n        })\n      })\n    }\n    \n\n  p5.setup = () => {\n    p5.createCanvas(canvasWidth, canvasHeight, /* p5.WEBGL */)\n    p5.smooth() \n    p5.background(\"#140c28\")\n    grid = createGrid([], linesAmt, lineSpacing, p5)\n    setInterval(slideRow, interval)    \n  }\n\n  p5.draw = () => {\n    // p5.rotateX(rotation)\n    p5.frameRate(24)\n    p5.translate(lineSpacing, -lineSpacing)\n    p5.background(\"#140c28\")\n    grid.forEach( row => {\n      row.forEach( x => {\n        x.display()\n      })\n    })\n  }\n}\n\n\nexport default class ProbableFuture extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n\n\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet img\nlet uploadImg\nconst cols = 35\nconst rows = 35\nlet matrix = []\nlet xSpacing\nlet ySpacing\nlet w\nlet h\nlet input;\n\nfunction Sketch(p5) {\n\n  function saveColors(matrix) {\n    matrix.forEach((cell, i) => {\n      matrix[i].push(p5.get(cell[0], cell[1]))\n    })    \n  }\n  \n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n  \n  function buildNewMatrix(rows, cols, xS, yS) {\n    let m = []\n    for (let i = 0; i < rows+1; i++) {\n      for (let j = 0; j < cols+1; j++) {\n        m.push([i*xS,j*yS])\n      }\n    }\n    return m\n  }\n  \n  p5.preload = () => {\n    img = p5.loadImage('https://i.imgur.com/6B788ty.jpg')\n  }\n  \n  p5.setup = () => {\n    var myCanvas = p5.createCanvas(img.width, img.height)\n    w = p5.width/cols\n    h = p5.height/rows\n    xSpacing = p5.width/cols\n    ySpacing = p5.height/cols\n  \n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        matrix.push([i*xSpacing,j*ySpacing])\n      }\n    }    \n  }\n\n  p5.draw = () => {\n    p5.frameRate(24)\n    let _newCols = p5.map(p5.mouseX, 0, p5.width, 0, 40)\n    let newCols = Math.ceil(_newCols)\n    let _newRows = p5.map(p5.mouseY, 0, p5.height, 0, 40)\n    let newRows = Math.ceil(_newRows)\n  \n    if (p5.mouseX > 1 && p5.mouseX < p5.width && p5.mouseY > 1 && p5.mouseY < p5.height) {\n      w = p5.width/newCols\n      h = p5.height/newRows\n      matrix = buildNewMatrix(newCols, newRows, p5.width/newCols, p5.height/newRows)\n    } else {\n      w = p5.width/cols\n      h = p5.height/rows\n      matrix = buildNewMatrix(cols, rows, p5.width/cols, p5.height/rows)\n    }\n    p5.image(img, 0, 0)\n    saveColors(matrix)\n    p5.background(0)\n    shuffleArray(matrix)\n  \n    matrix.forEach((cell, i) => {\n      p5.fill(cell[2])\n      p5.noStroke()\n      p5.ellipseMode(p5.CORNER)\n      p5.ellipse(cell[0], cell[1], w, h)\n    })       \n  }\n}\n\nexport default class Fragment extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\n\nlet frame\nlet canvas \nlet img\nlet uploadImg\nlet gridAmount = 10\nlet matrix = []\nlet xSpacing\nlet ySpacing\nlet w\nlet h\nlet input\nlet colors\nlet dotsSize\nlet palette = [\n  '#227c9d',\n  '#17c3b2',\n  '#ffcb77',\n  '#fef9ef',\n  '#fe6d73'\n]\n\nfunction Sketch(p5) {\n\n  function getColors(items) {\n    let _items = [...items]\n    let randomColId = Math.floor(Math.random() * _items.length)\n    _items.splice(randomColId, 1)\n  \n    return {\n      bg: items[randomColId],\n      colors: _items\n    }\n  }\n  \n  function getRandomFromArray(items) {\n    let result = items[Math.floor(Math.random() * items.length)]\n    return result\n  }\n  \n  \n  function randomDeg(_x, _y, w, h) {\n    let randomNumber = (Math.random() * 10).toFixed(1) // make util \n    if (randomNumber >= 0 && randomNumber < 2.5) {\n      return 0\n    } else if (randomNumber >= 2.5 && randomNumber < 5) {\n      return p5.HALF_PI\n    } else if (randomNumber >= 5 && randomNumber < 7.5) {\n      return p5.PI\n    } else {\n      return p5.TWO_PI\n    }\n  }\n  \n  function randomSign(w,h) {\n    let randomNumber = (Math.random() * 10).toFixed(1)\n  \n    if (randomNumber >= 0 && randomNumber < 3.3) {\n      let col1 = getRandomFromArray(colors.colors)\n      p5.fill(col1)\n      p5.arc(0, 0, w, h, 0, p5.HALF_PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } else if (randomNumber >= 3.3 && randomNumber < 6.6) {\n      let col2 = getRandomFromArray(colors.colors)\n      p5.fill(col2)\n      p5.arc(0, 0, w, h, 0, p5.PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } else if (randomNumber >= 6.6 && randomNumber <= 10) {\n      let col3 = getRandomFromArray(colors.colors)\n      p5.fill(col3)\n      p5.arc(0, 0, w, h, 0, p5.PI)\n      let col4 = getRandomFromArray(colors.colors)\n      p5.fill(col4)\n      p5.arc(0, 0, w, h, p5.PI, p5.PI + p5.HALF_PI)\n  \n      p5.fill(getRandomFromArray(colors.colors))\n      p5.ellipse(0,0,dotsSize)\n    } \n  }\n  \n  function Spot(x, y, w, h) {\n    let _x = x\n    let _y = y\n  \n    function display(xoff, yoff) {\n      p5.noStroke()\n      p5.push()\n        p5.translate(_x+xoff/2,_y+yoff/2)\n        let r = randomDeg()\n        p5.rotate(r)\n        randomSign(w,h)\n        p5.translate(0,0)\n      p5.pop()\n    }\n  \n    return {\n      display,\n    }\n  }\n\n  p5.setup = () => {\n    canvas = p5.createCanvas(600,600)\n  }\n\n  p5.draw = () => {\n    p5.frameCount > 0\n    ? p5.frameRate(5)\n    : p5.frameRate(1)\n\n    canvas.mouseOver(() => p5.frameRate(0))\n    canvas.mouseOut(() => p5.frameRate(10))\n\n  gridAmount = Math.ceil(p5.random(1,15))\n  w = p5.width/gridAmount\n  h = p5.height/gridAmount\n  xSpacing = p5.width/gridAmount\n  ySpacing = p5.height/gridAmount\n  colors = getColors(palette)\n  dotsSize = p5.random(p5.width/80, p5.width/18)\n\n  for (let i = 0; i < gridAmount; i++) {\n    for (let j = 0; j < gridAmount; j++) {\n      matrix.push([\n        Spot(i*xSpacing,j*ySpacing, xSpacing, ySpacing)\n      ])\n    }\n  }\n\n  p5.background(colors.bg)\n  matrix.forEach((cell, i) => {\n    p5.noStroke()\n    cell[0].display(xSpacing, ySpacing)\n  })  \n  matrix = []\n  }\n}\n\n\nexport default class Mosaic extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { Component } from \"react\"\nimport {loadableP5 as P5Wrapper} from '../components/loadable'\nimport { getRandomArbitrary } from \"../helpers\"\n\nlet img\nlet circle1 \nlet circle2 \nlet squares \nlet cropElement\nlet c1Opts\nlet c2Opts\nlet squaresOpts\nlet color = '#fff'\n\nfunction evenRandomNumber(amt) { // add to utils\n  return Math.ceil( Math.random() * amt / 2 ) * 2\n}\n\nfunction Sketch(p5) {\n  function cropElement(opts) {\n    let r \n    let angle\n    let introAngle\n    let outroAngle\n    let amt\n    let posArray = []\n    let introPosArray = []\n    let outroPosArray = []\n    let animation = 0\n    let initialAnimation = animation\n    let maxAnimation = 150\n    let resting = 0\n    let initialResting = 40\n    let fade = 80\n    let isFill = true\n    let strokeWeight = []\n\n    function drawingSettings(isFill, strokeWeight) {\n      if (isFill) {\n        p5.fill(color)\n        p5.noStroke()        \n      } else {\n        p5.noFill() \n        p5.strokeWeight(strokeWeight) \n        p5.stroke(color)  \n      }\n    }\n\n    function generatePositions() {\n      p5.angleMode(p5.DEGREES)\n      r = getRandomArbitrary(5, opts.maxSize) // use native\n      amt = evenRandomNumber(opts.amt)\n      angle = 360 / amt\n      // these are some ugly magic numbers... try to fix the jumping between intro and outro other way...\n      introAngle = 362.5 / amt\n      outroAngle = 364.5 / amt\n      let cropRadius = getRandomArbitrary(opts.cropRadius[0], opts.cropRadius[1])\n\n      if(opts.strokeWeight === undefined || opts.strokeWeight.length == 0) {\n        isFill = true\n      } else {\n        const [strokeMin, strokeMax] = opts.strokeWeight\n        isFill = false\n        strokeWeight = getRandomArbitrary(strokeMin, strokeMax)\n      } \n\n      // we should just use one posArray, but we are doing a hack\n      // of scaling the rotation so there is no jumping between intro and outro\n      posArray = [] // reseting array b4 filling it again...\n      for (let i = 0; i < amt; i++) {\n        posArray.push([angle * i, cropRadius])\n      }    \n      introPosArray = []\n      for (let i = 0; i < amt; i++) {\n        introPosArray.push([introAngle * i, cropRadius])\n      }    \n      outroPosArray = []\n      for (let i = 0; i < amt; i++) {\n        outroPosArray.push([outroAngle * i, cropRadius])\n      }    \n    }\n\n    function display() {\n      // Intro...\n      if (animation < maxAnimation) {\n        drawingSettings(isFill, strokeWeight)\n        animation++\n        introPosArray.forEach((pos, i) => {\n          let subtractor = pos[0] / animation\n          let rotation = pos[0] - subtractor\n          \n          p5.push() // make this whole part into a function and repeat below...\n            p5.rotate(rotation)\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n                p5.push()\n                  p5.rotate(45)\n                  p5.rect(0, 0, r, r)\n                p5.pop()\n            }\n          p5.pop()\n        })\n      } else if (animation === maxAnimation && resting <= initialResting ) {\n        // Resting\n        drawingSettings(isFill, strokeWeight)\n        resting ++\n        posArray.forEach((pos, i) => {\n          p5.push()\n            p5.rotate(pos[0])\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n              p5.push()\n                p5.rotate(45)\n                p5.rect(0, 0, r, r)\n              p5.pop()\n            }\n          p5.pop()\n        })   \n      } else if (resting >= initialResting && fade > 1 ) {\n      // Outro\n      drawingSettings(isFill, strokeWeight)\n        fade--\n        outroPosArray.forEach((pos, i) => {\n          let outroRotation = pos[0] - (pos[0] / fade)\n          p5.push()\n            p5.rotate(-outroRotation)\n            p5.translate(pos[1], 0)\n            if (opts.ellipse) {\n              p5.ellipse(0, 0, r, r)\n            } else {\n              p5.rectMode(p5.CENTER)\n              p5.push()\n                p5.rotate(45)\n                p5.rect(0, 0, r, r)\n              p5.pop()\n            }\n          p5.pop()\n        })        \n      } else if (fade === 1) {\n        // Reset values to start again...\n        generatePositions()\n        fade = 80\n        animation = 0\n        resting = 0        \n      }\n    }    \n    return {\n      generatePositions,\n      display\n    }\n  }\n\n  p5.setup = () => {\n    p5.createCanvas(600, 600)\n    p5.translate(p5.width / 2, p5.height / 2) \n\n    c1Opts = {\n      amt: 8,\n      maxSize: p5.width/2,\n      cropRadius: [p5.width/16, p5.width/4],\n      ellipse: true,\n    }\n    c2Opts = {\n      amt: 8,\n      maxSize: p5.width/4,\n      cropRadius: [p5.width/8, p5.width/3],\n      strokeWeight: [10, 15],\n      ellipse: true,\n    }\n\n    squaresOpts = {\n      amt: 4,\n      maxSize: p5.width/6,\n      strokeWeight: [4, 25],\n      cropRadius: [p5.width/6, p5.width/4],\n    }\n    \n    circle1 = cropElement(c1Opts)\n    circle2 = cropElement(c2Opts)\n    squares = cropElement(squaresOpts)\n    p5.translate(-p5.width / 2, -p5.height / 2) \n    circle1.generatePositions()\n    circle2.generatePositions()\n    squares.generatePositions()\n  }\n\n  p5.draw = () => {\n    p5.frameRate(30)\n    p5.translate(p5.width / 2, p5.height / 2) \n    // reset to black\n    p5.blendMode(p5.REPLACE) \n    p5.background(0)\n    // set to difference to make the ngative space stuff\n    p5.blendMode(p5.DIFFERENCE) \n    circle1.display()\n    circle2.display()\n    squares.display()\n    p5.filter(p5.INVERT)\n  }\n}\n\nexport default class Protocol extends Component{\n  render() {\n    return <P5Wrapper sketch={Sketch} />\n  }\n}\n","import React, { useLayoutEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport Layout from '../components/Layout'\nimport DancingLines from \"../sketches/DancingLines\"\nimport ProbableFuture from \"../sketches/ProbableFuture\"\nimport Fragment from \"../sketches/Fragment\"\nimport Mosaic from '../sketches/mosaic'\nimport Protocol from '../sketches/protocol'\nimport \"tachyons/css/tachyons.min.css\"\n\nlet sketches = {\n  dancingLines: <DancingLines />,\n  probableFuture: <ProbableFuture />,\n  fragment: <Fragment />,\n  mosaic: <Mosaic />,\n  protocol: <Protocol />,\n}\n\n// move somewhere...\nconst useScrollTo = id => {\n  useLayoutEffect(() => {\n    if (id) {\n      const el = document.getElementById(id)\n      const top = window.scrollY + el.getBoundingClientRect().top - 130 // add offset as props\n      window.setTimeout(() => {\n        window.scrollTo({ top, behavior: \"smooth\" })\n      }, 100) // time too... as props\n    }\n  }, [id])\n}\n\nconst BasicTemplate = (props) => {\n  let sketch\n  const { pageContext } = props\n  const { pageContent } = pageContext\n  useScrollTo('scrollTo')\n\n  for (const [key, value] of Object.entries(sketches)) {\n    for (let i = 0; i < pageContent.length; i++) {\n      if (pageContent[i].item.toLowerCase() === key.toLowerCase()) {\n        sketch = value\n      }\n    }\n  }\n\n  !sketch && console.log(\"Sketch not found...\")\n\n  return (\n    <Layout isDarkMode={false}>\n      <div>\n        <p className=\"b f-subheadline mb2\">{pageContent[0].item}</p>\n        <p>{pageContent[1].item}</p>\n        <div className=\"pt4\" id=\"scrollTo\" ></div>\n        {sketch}\n      </div>\n    </Layout>        \n  )\n}\n\nexport default BasicTemplate\n"],"names":["getRandomArbitrary","min","max","Math","random","dancingLine1","dancingLine2","Sketch","p5","setup","createCanvas","background","dancingLine","draw","translate","width","height","display","flip","history","col","v1","createVector","v2","x1Angle","y1Angle","x2Angle","y2Angle","r1","r2","set","sin","push","x","y","length","splice","forEach","linea","i","stroke","strokeWeight","line","x1AngleOff","y1AngleOff","x2AngleOff","y2AngleOff","DancingLines","render","sketch","Component","grid","lineSpacing","canvasHeight","randomCircleSize","multiplier","probabilityToBeSmall","r","createLine","arr","amt","startingPoint","fillColor","maxRadius","xpos","ypos","noStroke","fill","ellipse","slide","linesAmt","createCircle","h","s","toFixed","randomLevelFromHsl","createGrid","slideRow","canvasWidth","smooth","setInterval","frameRate","row","img","xSpacing","ySpacing","w","ProbableFuture","cols","matrix","buildNewMatrix","rows","xS","yS","m","j","preload","loadImage","_newCols","map","mouseX","newCols","ceil","_newRows","mouseY","newRows","image","cell","get","saveColors","array","floor","shuffleArray","ellipseMode","CORNER","canvas","colors","dotsSize","Fragment","gridAmount","palette","getRandomFromArray","items","Spot","_x","_y","xoff","yoff","randomNumber","HALF_PI","PI","TWO_PI","rotate","col1","arc","col2","col3","col4","randomSign","pop","_items","randomColId","frameCount","mouseOver","mouseOut","bg","circle1","circle2","squares","c1Opts","c2Opts","squaresOpts","Mosaic","color","cropElement","opts","angle","introAngle","outroAngle","posArray","introPosArray","outroPosArray","animation","resting","fade","isFill","drawingSettings","noFill","generatePositions","angleMode","DEGREES","maxSize","evenRandomNumber","cropRadius","undefined","strokeMin","strokeMax","pos","subtractor","rotation","rectMode","CENTER","rect","outroRotation","blendMode","REPLACE","DIFFERENCE","filter","INVERT","Protocol","sketches","dancingLines","probableFuture","fragment","mosaic","protocol","props","id","pageContent","pageContext","useLayoutEffect","el","document","getElementById","top","window","scrollY","getBoundingClientRect","setTimeout","scrollTo","behavior","Object","entries","key","value","item","toLowerCase","console","log","Layout","isDarkMode","className"],"sourceRoot":""}